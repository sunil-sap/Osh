
/**
 * LoyaltyLabAPIStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.hybris.osh.storefront.loyalty.services.client.loyaltyapi;

        

        /*
        *  LoyaltyLabAPIStub java implementation
        */

        
        public class LoyaltyLabAPIStub extends org.apache.axis2.client.Stub
        implements LoyaltyLabAPI{
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("LoyaltyLabAPI" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[113];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShoppers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createEventInstance"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addTransaction"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[2]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "scoreShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[3]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumberFragment"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[4]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductById"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[5]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByShopperId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[6]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomAttribute"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[7]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemOffer"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[8]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewards"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[9]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrices"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[10]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRegisteredCard"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[11]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsCustomAttributes"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[12]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrice"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[13]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectsFromSearchableCustomEntity"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[14]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTierPrograms"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[15]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByRetailerShopperId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[16]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectFromUniqueCustomEntity"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[17]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationTokenByRetailerID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[18]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomQuestionsForShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[19]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByEmailAddress"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[20]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "associatePurchase"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[21]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperTransactionsWithCompleteProductInfo"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[22]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogById"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[23]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogsByRewardProductId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[24]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToProgram"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[25]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[26]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getEventDefinitions"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[27]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsOrderItemsByDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[28]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[29]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCSRAuthenticationToken"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[30]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithRedemptionCustomAttributeCheck"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[31]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddress"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[32]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "referFriend"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[33]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByBalanceType"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[34]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchaseWithPointGroup"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[35]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addRewardProductToCatalog"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[36]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToTier"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[37]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointsExpiring"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[38]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[39]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPurchaseAwardForReturns"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[40]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "enrollShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[41]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDateByPointGroup"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[42]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[43]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardProduct"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[44]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getStores"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[45]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemReward"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[46]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createAndScoreShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[47]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRetailerID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[48]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPointPrices"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[49]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransaction"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[50]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "shopperSignIn"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[51]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "unEnrollShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[52]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationToken"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[53]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByUserName"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[54]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateRewardProduct"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[55]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalance"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[56]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointGroup"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[57]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsWithTenders"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[58]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPoints"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[59]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumber"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[60]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[61]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttributes"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[62]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProfilesByShopperId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[63]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByShopperId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[64]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesForShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[65]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchase"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[66]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProductBySKU"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[67]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferedFriends"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[68]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogByRetailerCatalogId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[69]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductByUniqueSKU"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[70]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemShopperRewardCerificate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[71]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByLoyaltyLabId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[72]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesWithSkuForShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[73]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByMergedVictimID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[74]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[75]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[76]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeShoppers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[77]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsByDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[78]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddresses"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[79]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[80]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroup"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[81]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByRegisteredCard"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[82]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRegisteredCards"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[83]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomQuestionForShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[84]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomEntitiesByReferenceTag"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[85]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByDate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[86]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRegisteredCard"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[87]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createUnregisteredShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[88]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactions"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[89]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopperWithCard"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[90]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "removeRewardProductFromCatalog"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[91]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "reversePurchaseAwardForReturns"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[92]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointState"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[93]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByExternalId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[94]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRegisteredCard"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[95]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByEmail"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[96]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[97]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByLoyaltyCardNumber"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[98]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "authenticateUser"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[99]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomEntity"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[100]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroupAndCustomAttributes"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[101]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPrograms"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[102]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffersExtended"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[103]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByRetailerID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[104]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperOfferStatus"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[105]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemption"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[106]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDateCustomAttributes"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[107]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperPointsBalanceWithCustomAttributes"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[108]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[109]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByLoyaltyProgramId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[110]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransactions"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[111]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttribute"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[112]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public LoyaltyLabAPIStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public LoyaltyLabAPIStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
            //Set the soap version
            _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
        
    
    }

    /**
     * Default Constructor
     */
    public LoyaltyLabAPIStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"https://api.loyaltylab.com/loyaltyapi/loyaltyapi.asmx" );
                
    }

    /**
     * Default Constructor
     */
    public LoyaltyLabAPIStub() throws org.apache.axis2.AxisFault {
        
                    this("https://api.loyaltylab.com/loyaltyapi/loyaltyapi.asmx" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public LoyaltyLabAPIStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#sendCommunicationToShoppers
                     * @param sendCommunicationToShoppers451
                    
                     * @param authenticationResult452
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse sendCommunicationToShoppers(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers sendCommunicationToShoppers451,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult452)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToShoppers");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToShoppers451,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShoppers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShoppers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult452!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult452 = toOM(authenticationResult452, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShoppers")));
                                                    addHeader(omElementauthenticationResult452,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startsendCommunicationToShoppers
                    * @param sendCommunicationToShoppers451
                
                    * @param authenticationResult452
                
                */
                public  void startsendCommunicationToShoppers(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers sendCommunicationToShoppers451,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult452,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToShoppers");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToShoppers451,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShoppers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShoppers"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult452!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult452 = toOM(authenticationResult452, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShoppers")));
                                                    addHeader(omElementauthenticationResult452,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendCommunicationToShoppers(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendCommunicationToShoppers(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShoppers"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorsendCommunicationToShoppers(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShoppers(f);
                                            }
									    } else {
										    callback.receiveErrorsendCommunicationToShoppers(f);
									    }
									} else {
									    callback.receiveErrorsendCommunicationToShoppers(f);
									}
								} else {
								    callback.receiveErrorsendCommunicationToShoppers(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendCommunicationToShoppers(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createEventInstance
                     * @param createEventInstance454
                    
                     * @param authenticationResult455
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse createEventInstance(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance createEventInstance454,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult455)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateEventInstance");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createEventInstance454,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createEventInstance")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createEventInstance"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult455!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult455 = toOM(authenticationResult455, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createEventInstance")));
                                                    addHeader(omElementauthenticationResult455,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateEventInstance
                    * @param createEventInstance454
                
                    * @param authenticationResult455
                
                */
                public  void startcreateEventInstance(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance createEventInstance454,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult455,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateEventInstance");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createEventInstance454,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createEventInstance")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createEventInstance"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult455!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult455 = toOM(authenticationResult455, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createEventInstance")));
                                                    addHeader(omElementauthenticationResult455,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateEventInstance(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateEventInstance(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateEventInstance"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateEventInstance(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateEventInstance(f);
                                            }
									    } else {
										    callback.receiveErrorcreateEventInstance(f);
									    }
									} else {
									    callback.receiveErrorcreateEventInstance(f);
									}
								} else {
								    callback.receiveErrorcreateEventInstance(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateEventInstance(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#addTransaction
                     * @param addTransaction457
                    
                     * @param authenticationResult458
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse addTransaction(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction addTransaction457,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult458)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddTransaction");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTransaction457,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addTransaction")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addTransaction"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult458!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult458 = toOM(authenticationResult458, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addTransaction")));
                                                    addHeader(omElementauthenticationResult458,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startaddTransaction
                    * @param addTransaction457
                
                    * @param authenticationResult458
                
                */
                public  void startaddTransaction(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction addTransaction457,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult458,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddTransaction");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTransaction457,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addTransaction")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addTransaction"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult458!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult458 = toOM(authenticationResult458, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addTransaction")));
                                                    addHeader(omElementauthenticationResult458,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddTransaction(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddTransaction(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTransaction"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddTransaction(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTransaction(f);
                                            }
									    } else {
										    callback.receiveErroraddTransaction(f);
									    }
									} else {
									    callback.receiveErroraddTransaction(f);
									}
								} else {
								    callback.receiveErroraddTransaction(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddTransaction(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#scoreShopper
                     * @param scoreShopper460
                    
                     * @param authenticationResult461
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse scoreShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper scoreShopper460,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult461)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ScoreShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    scoreShopper460,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "scoreShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "scoreShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult461!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult461 = toOM(authenticationResult461, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "scoreShopper")));
                                                    addHeader(omElementauthenticationResult461,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startscoreShopper
                    * @param scoreShopper460
                
                    * @param authenticationResult461
                
                */
                public  void startscoreShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper scoreShopper460,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult461,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ScoreShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    scoreShopper460,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "scoreShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "scoreShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult461!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult461 = toOM(authenticationResult461, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "scoreShopper")));
                                                    addHeader(omElementauthenticationResult461,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultscoreShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorscoreShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ScoreShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorscoreShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorscoreShopper(f);
                                            }
									    } else {
										    callback.receiveErrorscoreShopper(f);
									    }
									} else {
									    callback.receiveErrorscoreShopper(f);
									}
								} else {
								    callback.receiveErrorscoreShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorscoreShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[3].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[3].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShoppersByPhoneNumberFragment
                     * @param getShoppersByPhoneNumberFragment463
                    
                     * @param authenticationResult464
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse getShoppersByPhoneNumberFragment(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment getShoppersByPhoneNumberFragment463,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult464)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByPhoneNumberFragment");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByPhoneNumberFragment463,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumberFragment")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumberFragment"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult464!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult464 = toOM(authenticationResult464, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumberFragment")));
                                                    addHeader(omElementauthenticationResult464,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShoppersByPhoneNumberFragment
                    * @param getShoppersByPhoneNumberFragment463
                
                    * @param authenticationResult464
                
                */
                public  void startgetShoppersByPhoneNumberFragment(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment getShoppersByPhoneNumberFragment463,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult464,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByPhoneNumberFragment");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByPhoneNumberFragment463,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumberFragment")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumberFragment"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult464!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult464 = toOM(authenticationResult464, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumberFragment")));
                                                    addHeader(omElementauthenticationResult464,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShoppersByPhoneNumberFragment(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShoppersByPhoneNumberFragment(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumberFragment"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShoppersByPhoneNumberFragment(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
                                            }
									    } else {
										    callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
									    }
									} else {
									    callback.receiveErrorgetShoppersByPhoneNumberFragment(f);
									}
								} else {
								    callback.receiveErrorgetShoppersByPhoneNumberFragment(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShoppersByPhoneNumberFragment(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[4].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[4].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewardProductById
                     * @param getRewardProductById466
                    
                     * @param authenticationResult467
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse getRewardProductById(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById getRewardProductById466,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult467)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardProductById");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardProductById466,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductById")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductById"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult467!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult467 = toOM(authenticationResult467, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductById")));
                                                    addHeader(omElementauthenticationResult467,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewardProductById
                    * @param getRewardProductById466
                
                    * @param authenticationResult467
                
                */
                public  void startgetRewardProductById(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById getRewardProductById466,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult467,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardProductById");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardProductById466,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductById")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductById"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult467!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult467 = toOM(authenticationResult467, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductById")));
                                                    addHeader(omElementauthenticationResult467,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewardProductById(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewardProductById(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductById"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewardProductById(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductById(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewardProductById(f);
									    }
									} else {
									    callback.receiveErrorgetRewardProductById(f);
									}
								} else {
								    callback.receiveErrorgetRewardProductById(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewardProductById(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[5].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[5].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperRedemptionsByShopperId
                     * @param getShopperRedemptionsByShopperId469
                    
                     * @param authenticationResult470
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse getShopperRedemptionsByShopperId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId getShopperRedemptionsByShopperId469,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult470)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByShopperId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByShopperId469,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByShopperId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult470!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult470 = toOM(authenticationResult470, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByShopperId")));
                                                    addHeader(omElementauthenticationResult470,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperRedemptionsByShopperId
                    * @param getShopperRedemptionsByShopperId469
                
                    * @param authenticationResult470
                
                */
                public  void startgetShopperRedemptionsByShopperId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId getShopperRedemptionsByShopperId469,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult470,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByShopperId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByShopperId469,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByShopperId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult470!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult470 = toOM(authenticationResult470, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByShopperId")));
                                                    addHeader(omElementauthenticationResult470,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperRedemptionsByShopperId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperRedemptionsByShopperId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByShopperId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperRedemptionsByShopperId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByShopperId(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperRedemptionsByShopperId(f);
									    }
									} else {
									    callback.receiveErrorgetShopperRedemptionsByShopperId(f);
									}
								} else {
								    callback.receiveErrorgetShopperRedemptionsByShopperId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperRedemptionsByShopperId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[6].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[6].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCustomAttribute
                     * @param getCustomAttribute472
                    
                     * @param authenticationResult473
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse getCustomAttribute(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute getCustomAttribute472,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult473)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomAttribute");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomAttribute472,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomAttribute")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomAttribute"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult473!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult473 = toOM(authenticationResult473, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomAttribute")));
                                                    addHeader(omElementauthenticationResult473,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCustomAttribute
                    * @param getCustomAttribute472
                
                    * @param authenticationResult473
                
                */
                public  void startgetCustomAttribute(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute getCustomAttribute472,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult473,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomAttribute");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomAttribute472,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomAttribute")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomAttribute"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult473!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult473 = toOM(authenticationResult473, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomAttribute")));
                                                    addHeader(omElementauthenticationResult473,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomAttribute(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomAttribute(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomAttribute"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCustomAttribute(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomAttribute(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomAttribute(f);
									    }
									} else {
									    callback.receiveErrorgetCustomAttribute(f);
									}
								} else {
								    callback.receiveErrorgetCustomAttribute(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomAttribute(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[7].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[7].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#redeemOffer
                     * @param redeemOffer475
                    
                     * @param authenticationResult476
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse redeemOffer(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer redeemOffer475,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult476)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemOffer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemOffer475,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemOffer")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemOffer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult476!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult476 = toOM(authenticationResult476, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemOffer")));
                                                    addHeader(omElementauthenticationResult476,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startredeemOffer
                    * @param redeemOffer475
                
                    * @param authenticationResult476
                
                */
                public  void startredeemOffer(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer redeemOffer475,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult476,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemOffer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemOffer475,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemOffer")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemOffer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult476!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult476 = toOM(authenticationResult476, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemOffer")));
                                                    addHeader(omElementauthenticationResult476,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultredeemOffer(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorredeemOffer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemOffer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorredeemOffer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemOffer(f);
                                            }
									    } else {
										    callback.receiveErrorredeemOffer(f);
									    }
									} else {
									    callback.receiveErrorredeemOffer(f);
									}
								} else {
								    callback.receiveErrorredeemOffer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorredeemOffer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[8].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[8].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewards
                     * @param getRewards478
                    
                     * @param authenticationResult479
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse getRewards(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards getRewards478,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult479)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewards");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewards478,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewards")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewards"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult479!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult479 = toOM(authenticationResult479, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewards")));
                                                    addHeader(omElementauthenticationResult479,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewards
                    * @param getRewards478
                
                    * @param authenticationResult479
                
                */
                public  void startgetRewards(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards getRewards478,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult479,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewards");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewards478,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewards")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewards"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult479!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult479 = toOM(authenticationResult479, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewards")));
                                                    addHeader(omElementauthenticationResult479,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewards(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewards(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewards"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewards(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewards(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewards(f);
									    }
									} else {
									    callback.receiveErrorgetRewards(f);
									}
								} else {
								    callback.receiveErrorgetRewards(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewards(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[9].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[9].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCurrentPointPrices
                     * @param getCurrentPointPrices481
                    
                     * @param authenticationResult482
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse getCurrentPointPrices(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices getCurrentPointPrices481,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult482)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCurrentPointPrices");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentPointPrices481,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrices")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrices"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult482!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult482 = toOM(authenticationResult482, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrices")));
                                                    addHeader(omElementauthenticationResult482,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCurrentPointPrices
                    * @param getCurrentPointPrices481
                
                    * @param authenticationResult482
                
                */
                public  void startgetCurrentPointPrices(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices getCurrentPointPrices481,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult482,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCurrentPointPrices");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentPointPrices481,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrices")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrices"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult482!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult482 = toOM(authenticationResult482, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrices")));
                                                    addHeader(omElementauthenticationResult482,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCurrentPointPrices(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCurrentPointPrices(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrices"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCurrentPointPrices(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrices(f);
                                            }
									    } else {
										    callback.receiveErrorgetCurrentPointPrices(f);
									    }
									} else {
									    callback.receiveErrorgetCurrentPointPrices(f);
									}
								} else {
								    callback.receiveErrorgetCurrentPointPrices(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCurrentPointPrices(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[10].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[10].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createRegisteredCard
                     * @param createRegisteredCard484
                    
                     * @param authenticationResult485
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse createRegisteredCard(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard createRegisteredCard484,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult485)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRegisteredCard");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRegisteredCard484,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRegisteredCard"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult485!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult485 = toOM(authenticationResult485, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRegisteredCard")));
                                                    addHeader(omElementauthenticationResult485,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateRegisteredCard
                    * @param createRegisteredCard484
                
                    * @param authenticationResult485
                
                */
                public  void startcreateRegisteredCard(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard createRegisteredCard484,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult485,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRegisteredCard");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRegisteredCard484,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRegisteredCard"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult485!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult485 = toOM(authenticationResult485, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRegisteredCard")));
                                                    addHeader(omElementauthenticationResult485,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateRegisteredCard(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateRegisteredCard(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRegisteredCard"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateRegisteredCard(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRegisteredCard(f);
                                            }
									    } else {
										    callback.receiveErrorcreateRegisteredCard(f);
									    }
									} else {
									    callback.receiveErrorcreateRegisteredCard(f);
									}
								} else {
								    callback.receiveErrorcreateRegisteredCard(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateRegisteredCard(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[11].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[11].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#adjustShopperPointsCustomAttributes
                     * @param adjustShopperPointsCustomAttributes487
                    
                     * @param authenticationResult488
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse adjustShopperPointsCustomAttributes(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes adjustShopperPointsCustomAttributes487,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult488)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsCustomAttributes");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsCustomAttributes487,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsCustomAttributes"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult488!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult488 = toOM(authenticationResult488, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsCustomAttributes")));
                                                    addHeader(omElementauthenticationResult488,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startadjustShopperPointsCustomAttributes
                    * @param adjustShopperPointsCustomAttributes487
                
                    * @param authenticationResult488
                
                */
                public  void startadjustShopperPointsCustomAttributes(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes adjustShopperPointsCustomAttributes487,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult488,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsCustomAttributes");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsCustomAttributes487,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsCustomAttributes"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult488!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult488 = toOM(authenticationResult488, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsCustomAttributes")));
                                                    addHeader(omElementauthenticationResult488,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultadjustShopperPointsCustomAttributes(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroradjustShopperPointsCustomAttributes(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsCustomAttributes"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroradjustShopperPointsCustomAttributes(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsCustomAttributes(f);
                                            }
									    } else {
										    callback.receiveErroradjustShopperPointsCustomAttributes(f);
									    }
									} else {
									    callback.receiveErroradjustShopperPointsCustomAttributes(f);
									}
								} else {
								    callback.receiveErroradjustShopperPointsCustomAttributes(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroradjustShopperPointsCustomAttributes(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[12].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[12].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCurrentPointPrice
                     * @param getCurrentPointPrice490
                    
                     * @param authenticationResult491
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse getCurrentPointPrice(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice getCurrentPointPrice490,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult491)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCurrentPointPrice");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentPointPrice490,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrice")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrice"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult491!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult491 = toOM(authenticationResult491, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrice")));
                                                    addHeader(omElementauthenticationResult491,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCurrentPointPrice
                    * @param getCurrentPointPrice490
                
                    * @param authenticationResult491
                
                */
                public  void startgetCurrentPointPrice(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice getCurrentPointPrice490,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult491,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCurrentPointPrice");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentPointPrice490,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrice")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCurrentPointPrice"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult491!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult491 = toOM(authenticationResult491, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCurrentPointPrice")));
                                                    addHeader(omElementauthenticationResult491,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCurrentPointPrice(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCurrentPointPrice(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentPointPrice"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCurrentPointPrice(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentPointPrice(f);
                                            }
									    } else {
										    callback.receiveErrorgetCurrentPointPrice(f);
									    }
									} else {
									    callback.receiveErrorgetCurrentPointPrice(f);
									}
								} else {
								    callback.receiveErrorgetCurrentPointPrice(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCurrentPointPrice(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[13].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[13].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getReferenceObjectsFromSearchableCustomEntity
                     * @param getReferenceObjectsFromSearchableCustomEntity493
                    
                     * @param authenticationResult494
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse getReferenceObjectsFromSearchableCustomEntity(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity getReferenceObjectsFromSearchableCustomEntity493,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult494)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferenceObjectsFromSearchableCustomEntity");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferenceObjectsFromSearchableCustomEntity493,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectsFromSearchableCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectsFromSearchableCustomEntity"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult494!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult494 = toOM(authenticationResult494, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectsFromSearchableCustomEntity")));
                                                    addHeader(omElementauthenticationResult494,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetReferenceObjectsFromSearchableCustomEntity
                    * @param getReferenceObjectsFromSearchableCustomEntity493
                
                    * @param authenticationResult494
                
                */
                public  void startgetReferenceObjectsFromSearchableCustomEntity(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity getReferenceObjectsFromSearchableCustomEntity493,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult494,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferenceObjectsFromSearchableCustomEntity");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferenceObjectsFromSearchableCustomEntity493,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectsFromSearchableCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectsFromSearchableCustomEntity"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult494!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult494 = toOM(authenticationResult494, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectsFromSearchableCustomEntity")));
                                                    addHeader(omElementauthenticationResult494,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetReferenceObjectsFromSearchableCustomEntity(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectsFromSearchableCustomEntity"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
                                            }
									    } else {
										    callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
									    }
									} else {
									    callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(f);
									}
								} else {
								    callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetReferenceObjectsFromSearchableCustomEntity(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[14].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[14].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTierPrograms
                     * @param getTierPrograms496
                    
                     * @param authenticationResult497
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse getTierPrograms(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms getTierPrograms496,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult497)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTierPrograms");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTierPrograms496,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTierPrograms")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTierPrograms"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult497!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult497 = toOM(authenticationResult497, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTierPrograms")));
                                                    addHeader(omElementauthenticationResult497,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTierPrograms
                    * @param getTierPrograms496
                
                    * @param authenticationResult497
                
                */
                public  void startgetTierPrograms(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms getTierPrograms496,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult497,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTierPrograms");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTierPrograms496,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTierPrograms")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTierPrograms"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult497!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult497 = toOM(authenticationResult497, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTierPrograms")));
                                                    addHeader(omElementauthenticationResult497,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTierPrograms(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTierPrograms(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTierPrograms"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTierPrograms(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTierPrograms(f);
                                            }
									    } else {
										    callback.receiveErrorgetTierPrograms(f);
									    }
									} else {
									    callback.receiveErrorgetTierPrograms(f);
									}
								} else {
								    callback.receiveErrorgetTierPrograms(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTierPrograms(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[15].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[15].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the client's shopper identifier.
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTotalPointsEarnedByRetailerShopperId
                     * @param getTotalPointsEarnedByRetailerShopperId499
                    
                     * @param authenticationResult500
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse getTotalPointsEarnedByRetailerShopperId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId getTotalPointsEarnedByRetailerShopperId499,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult500)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByRetailerShopperId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByRetailerShopperId499,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByRetailerShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByRetailerShopperId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult500!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult500 = toOM(authenticationResult500, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByRetailerShopperId")));
                                                    addHeader(omElementauthenticationResult500,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the client's shopper identifier.
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTotalPointsEarnedByRetailerShopperId
                    * @param getTotalPointsEarnedByRetailerShopperId499
                
                    * @param authenticationResult500
                
                */
                public  void startgetTotalPointsEarnedByRetailerShopperId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId getTotalPointsEarnedByRetailerShopperId499,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult500,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByRetailerShopperId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByRetailerShopperId499,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByRetailerShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByRetailerShopperId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult500!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult500 = toOM(authenticationResult500, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByRetailerShopperId")));
                                                    addHeader(omElementauthenticationResult500,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTotalPointsEarnedByRetailerShopperId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByRetailerShopperId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
                                            }
									    } else {
										    callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
									    }
									} else {
									    callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(f);
									}
								} else {
								    callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTotalPointsEarnedByRetailerShopperId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[16].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[16].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getReferenceObjectFromUniqueCustomEntity
                     * @param getReferenceObjectFromUniqueCustomEntity502
                    
                     * @param authenticationResult503
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse getReferenceObjectFromUniqueCustomEntity(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity getReferenceObjectFromUniqueCustomEntity502,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult503)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferenceObjectFromUniqueCustomEntity");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferenceObjectFromUniqueCustomEntity502,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectFromUniqueCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectFromUniqueCustomEntity"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult503!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult503 = toOM(authenticationResult503, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectFromUniqueCustomEntity")));
                                                    addHeader(omElementauthenticationResult503,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetReferenceObjectFromUniqueCustomEntity
                    * @param getReferenceObjectFromUniqueCustomEntity502
                
                    * @param authenticationResult503
                
                */
                public  void startgetReferenceObjectFromUniqueCustomEntity(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity getReferenceObjectFromUniqueCustomEntity502,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult503,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferenceObjectFromUniqueCustomEntity");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferenceObjectFromUniqueCustomEntity502,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectFromUniqueCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferenceObjectFromUniqueCustomEntity"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult503!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult503 = toOM(authenticationResult503, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferenceObjectFromUniqueCustomEntity")));
                                                    addHeader(omElementauthenticationResult503,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetReferenceObjectFromUniqueCustomEntity(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferenceObjectFromUniqueCustomEntity"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
                                            }
									    } else {
										    callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
									    }
									} else {
									    callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(f);
									}
								} else {
								    callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetReferenceObjectFromUniqueCustomEntity(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[17].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[17].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperAuthenticationTokenByRetailerID
                     * @param getShopperAuthenticationTokenByRetailerID505
                    
                     * @param authenticationResult506
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse getShopperAuthenticationTokenByRetailerID(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID getShopperAuthenticationTokenByRetailerID505,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult506)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperAuthenticationTokenByRetailerID");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperAuthenticationTokenByRetailerID505,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationTokenByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationTokenByRetailerID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult506!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult506 = toOM(authenticationResult506, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationTokenByRetailerID")));
                                                    addHeader(omElementauthenticationResult506,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperAuthenticationTokenByRetailerID
                    * @param getShopperAuthenticationTokenByRetailerID505
                
                    * @param authenticationResult506
                
                */
                public  void startgetShopperAuthenticationTokenByRetailerID(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID getShopperAuthenticationTokenByRetailerID505,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult506,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperAuthenticationTokenByRetailerID");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperAuthenticationTokenByRetailerID505,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationTokenByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationTokenByRetailerID"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult506!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult506 = toOM(authenticationResult506, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationTokenByRetailerID")));
                                                    addHeader(omElementauthenticationResult506,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperAuthenticationTokenByRetailerID(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationTokenByRetailerID"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
									    }
									} else {
									    callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(f);
									}
								} else {
								    callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperAuthenticationTokenByRetailerID(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[18].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[18].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCustomQuestionsForShopper
                     * @param getCustomQuestionsForShopper508
                    
                     * @param authenticationResult509
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse getCustomQuestionsForShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper getCustomQuestionsForShopper508,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult509)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomQuestionsForShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomQuestionsForShopper508,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomQuestionsForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomQuestionsForShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult509!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult509 = toOM(authenticationResult509, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomQuestionsForShopper")));
                                                    addHeader(omElementauthenticationResult509,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCustomQuestionsForShopper
                    * @param getCustomQuestionsForShopper508
                
                    * @param authenticationResult509
                
                */
                public  void startgetCustomQuestionsForShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper getCustomQuestionsForShopper508,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult509,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomQuestionsForShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomQuestionsForShopper508,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomQuestionsForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomQuestionsForShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult509!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult509 = toOM(authenticationResult509, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomQuestionsForShopper")));
                                                    addHeader(omElementauthenticationResult509,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomQuestionsForShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomQuestionsForShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomQuestionsForShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCustomQuestionsForShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomQuestionsForShopper(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomQuestionsForShopper(f);
									    }
									} else {
									    callback.receiveErrorgetCustomQuestionsForShopper(f);
									}
								} else {
								    callback.receiveErrorgetCustomQuestionsForShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomQuestionsForShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[19].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[19].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the email address.
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTotalPointsEarnedByEmailAddress
                     * @param getTotalPointsEarnedByEmailAddress511
                    
                     * @param authenticationResult512
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse getTotalPointsEarnedByEmailAddress(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress getTotalPointsEarnedByEmailAddress511,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult512)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByEmailAddress");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByEmailAddress511,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByEmailAddress")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByEmailAddress"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult512!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult512 = toOM(authenticationResult512, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByEmailAddress")));
                                                    addHeader(omElementauthenticationResult512,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the email address.
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTotalPointsEarnedByEmailAddress
                    * @param getTotalPointsEarnedByEmailAddress511
                
                    * @param authenticationResult512
                
                */
                public  void startgetTotalPointsEarnedByEmailAddress(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress getTotalPointsEarnedByEmailAddress511,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult512,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByEmailAddress");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByEmailAddress511,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByEmailAddress")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByEmailAddress"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult512!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult512 = toOM(authenticationResult512, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByEmailAddress")));
                                                    addHeader(omElementauthenticationResult512,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTotalPointsEarnedByEmailAddress(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByEmailAddress"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTotalPointsEarnedByEmailAddress(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
                                            }
									    } else {
										    callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
									    }
									} else {
									    callback.receiveErrorgetTotalPointsEarnedByEmailAddress(f);
									}
								} else {
								    callback.receiveErrorgetTotalPointsEarnedByEmailAddress(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTotalPointsEarnedByEmailAddress(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[20].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[20].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#associatePurchase
                     * @param associatePurchase514
                    
                     * @param authenticationResult515
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse associatePurchase(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase associatePurchase514,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult515)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AssociatePurchase");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    associatePurchase514,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "associatePurchase")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "associatePurchase"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult515!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult515 = toOM(authenticationResult515, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "associatePurchase")));
                                                    addHeader(omElementauthenticationResult515,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startassociatePurchase
                    * @param associatePurchase514
                
                    * @param authenticationResult515
                
                */
                public  void startassociatePurchase(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase associatePurchase514,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult515,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AssociatePurchase");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    associatePurchase514,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "associatePurchase")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "associatePurchase"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult515!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult515 = toOM(authenticationResult515, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "associatePurchase")));
                                                    addHeader(omElementauthenticationResult515,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultassociatePurchase(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorassociatePurchase(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AssociatePurchase"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorassociatePurchase(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorassociatePurchase(f);
                                            }
									    } else {
										    callback.receiveErrorassociatePurchase(f);
									    }
									} else {
									    callback.receiveErrorassociatePurchase(f);
									}
								} else {
								    callback.receiveErrorassociatePurchase(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorassociatePurchase(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[21].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[21].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperTransactionsWithCompleteProductInfo
                     * @param getShopperTransactionsWithCompleteProductInfo517
                    
                     * @param authenticationResult518
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse getShopperTransactionsWithCompleteProductInfo(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo getShopperTransactionsWithCompleteProductInfo517,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult518)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperTransactionsWithCompleteProductInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperTransactionsWithCompleteProductInfo517,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperTransactionsWithCompleteProductInfo")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperTransactionsWithCompleteProductInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult518!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult518 = toOM(authenticationResult518, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperTransactionsWithCompleteProductInfo")));
                                                    addHeader(omElementauthenticationResult518,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperTransactionsWithCompleteProductInfo
                    * @param getShopperTransactionsWithCompleteProductInfo517
                
                    * @param authenticationResult518
                
                */
                public  void startgetShopperTransactionsWithCompleteProductInfo(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo getShopperTransactionsWithCompleteProductInfo517,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult518,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperTransactionsWithCompleteProductInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperTransactionsWithCompleteProductInfo517,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperTransactionsWithCompleteProductInfo")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperTransactionsWithCompleteProductInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult518!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult518 = toOM(authenticationResult518, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperTransactionsWithCompleteProductInfo")));
                                                    addHeader(omElementauthenticationResult518,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperTransactionsWithCompleteProductInfo(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperTransactionsWithCompleteProductInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
									    }
									} else {
									    callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(f);
									}
								} else {
								    callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperTransactionsWithCompleteProductInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[22].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[22].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewardCatalogById
                     * @param getRewardCatalogById520
                    
                     * @param authenticationResult521
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse getRewardCatalogById(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById getRewardCatalogById520,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult521)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogById");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogById520,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogById")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogById"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult521!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult521 = toOM(authenticationResult521, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogById")));
                                                    addHeader(omElementauthenticationResult521,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewardCatalogById
                    * @param getRewardCatalogById520
                
                    * @param authenticationResult521
                
                */
                public  void startgetRewardCatalogById(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById getRewardCatalogById520,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult521,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogById");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogById520,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogById")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogById"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult521!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult521 = toOM(authenticationResult521, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogById")));
                                                    addHeader(omElementauthenticationResult521,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewardCatalogById(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewardCatalogById(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogById"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewardCatalogById(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogById(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewardCatalogById(f);
									    }
									} else {
									    callback.receiveErrorgetRewardCatalogById(f);
									}
								} else {
								    callback.receiveErrorgetRewardCatalogById(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewardCatalogById(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[23].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[23].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewardCatalogsByRewardProductId
                     * @param getRewardCatalogsByRewardProductId523
                    
                     * @param authenticationResult524
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse getRewardCatalogsByRewardProductId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId getRewardCatalogsByRewardProductId523,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult524)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogsByRewardProductId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogsByRewardProductId523,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogsByRewardProductId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogsByRewardProductId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult524!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult524 = toOM(authenticationResult524, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogsByRewardProductId")));
                                                    addHeader(omElementauthenticationResult524,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewardCatalogsByRewardProductId
                    * @param getRewardCatalogsByRewardProductId523
                
                    * @param authenticationResult524
                
                */
                public  void startgetRewardCatalogsByRewardProductId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId getRewardCatalogsByRewardProductId523,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult524,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogsByRewardProductId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogsByRewardProductId523,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogsByRewardProductId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogsByRewardProductId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult524!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult524 = toOM(authenticationResult524, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogsByRewardProductId")));
                                                    addHeader(omElementauthenticationResult524,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewardCatalogsByRewardProductId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewardCatalogsByRewardProductId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogsByRewardProductId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewardCatalogsByRewardProductId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
									    }
									} else {
									    callback.receiveErrorgetRewardCatalogsByRewardProductId(f);
									}
								} else {
								    callback.receiveErrorgetRewardCatalogsByRewardProductId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewardCatalogsByRewardProductId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[24].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[24].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#addShopperToProgram
                     * @param addShopperToProgram526
                    
                     * @param authenticationResult527
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse addShopperToProgram(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram addShopperToProgram526,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult527)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddShopperToProgram");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addShopperToProgram526,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToProgram")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToProgram"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult527!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult527 = toOM(authenticationResult527, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToProgram")));
                                                    addHeader(omElementauthenticationResult527,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startaddShopperToProgram
                    * @param addShopperToProgram526
                
                    * @param authenticationResult527
                
                */
                public  void startaddShopperToProgram(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram addShopperToProgram526,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult527,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddShopperToProgram");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addShopperToProgram526,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToProgram")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToProgram"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult527!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult527 = toOM(authenticationResult527, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToProgram")));
                                                    addHeader(omElementauthenticationResult527,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddShopperToProgram(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddShopperToProgram(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToProgram"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddShopperToProgram(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToProgram(f);
                                            }
									    } else {
										    callback.receiveErroraddShopperToProgram(f);
									    }
									} else {
									    callback.receiveErroraddShopperToProgram(f);
									}
								} else {
								    callback.receiveErroraddShopperToProgram(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddShopperToProgram(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[25].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[25].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#sendCommunicationToShopper
                     * @param sendCommunicationToShopper529
                    
                     * @param authenticationResult530
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse sendCommunicationToShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper sendCommunicationToShopper529,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult530)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToShopper529,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult530!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult530 = toOM(authenticationResult530, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShopper")));
                                                    addHeader(omElementauthenticationResult530,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startsendCommunicationToShopper
                    * @param sendCommunicationToShopper529
                
                    * @param authenticationResult530
                
                */
                public  void startsendCommunicationToShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper sendCommunicationToShopper529,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult530,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToShopper529,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult530!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult530 = toOM(authenticationResult530, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToShopper")));
                                                    addHeader(omElementauthenticationResult530,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendCommunicationToShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendCommunicationToShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorsendCommunicationToShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToShopper(f);
                                            }
									    } else {
										    callback.receiveErrorsendCommunicationToShopper(f);
									    }
									} else {
									    callback.receiveErrorsendCommunicationToShopper(f);
									}
								} else {
								    callback.receiveErrorsendCommunicationToShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendCommunicationToShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[26].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[26].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getEventDefinitions
                     * @param getEventDefinitions532
                    
                     * @param authenticationResult533
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse getEventDefinitions(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions getEventDefinitions532,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult533)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetEventDefinitions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getEventDefinitions532,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getEventDefinitions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getEventDefinitions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult533!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult533 = toOM(authenticationResult533, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getEventDefinitions")));
                                                    addHeader(omElementauthenticationResult533,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetEventDefinitions
                    * @param getEventDefinitions532
                
                    * @param authenticationResult533
                
                */
                public  void startgetEventDefinitions(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions getEventDefinitions532,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult533,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetEventDefinitions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getEventDefinitions532,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getEventDefinitions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getEventDefinitions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult533!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult533 = toOM(authenticationResult533, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getEventDefinitions")));
                                                    addHeader(omElementauthenticationResult533,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetEventDefinitions(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetEventDefinitions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetEventDefinitions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetEventDefinitions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetEventDefinitions(f);
                                            }
									    } else {
										    callback.receiveErrorgetEventDefinitions(f);
									    }
									} else {
									    callback.receiveErrorgetEventDefinitions(f);
									}
								} else {
								    callback.receiveErrorgetEventDefinitions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetEventDefinitions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[27].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[27].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperRedemptionsOrderItemsByDate
                     * @param getShopperRedemptionsOrderItemsByDate535
                    
                     * @param authenticationResult536
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse getShopperRedemptionsOrderItemsByDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate getShopperRedemptionsOrderItemsByDate535,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult536)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsOrderItemsByDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsOrderItemsByDate535,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsOrderItemsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsOrderItemsByDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult536!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult536 = toOM(authenticationResult536, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsOrderItemsByDate")));
                                                    addHeader(omElementauthenticationResult536,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperRedemptionsOrderItemsByDate
                    * @param getShopperRedemptionsOrderItemsByDate535
                
                    * @param authenticationResult536
                
                */
                public  void startgetShopperRedemptionsOrderItemsByDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate getShopperRedemptionsOrderItemsByDate535,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult536,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsOrderItemsByDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsOrderItemsByDate535,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsOrderItemsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsOrderItemsByDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult536!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult536 = toOM(authenticationResult536, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsOrderItemsByDate")));
                                                    addHeader(omElementauthenticationResult536,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperRedemptionsOrderItemsByDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsOrderItemsByDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
									    }
									} else {
									    callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(f);
									}
								} else {
								    callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperRedemptionsOrderItemsByDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[28].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[28].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getPlcAvailablePointsByDate
                     * @param getPlcAvailablePointsByDate538
                    
                     * @param authenticationResult539
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse getPlcAvailablePointsByDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate getPlcAvailablePointsByDate538,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult539)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPlcAvailablePointsByDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlcAvailablePointsByDate538,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult539!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult539 = toOM(authenticationResult539, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDate")));
                                                    addHeader(omElementauthenticationResult539,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetPlcAvailablePointsByDate
                    * @param getPlcAvailablePointsByDate538
                
                    * @param authenticationResult539
                
                */
                public  void startgetPlcAvailablePointsByDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate getPlcAvailablePointsByDate538,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult539,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPlcAvailablePointsByDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlcAvailablePointsByDate538,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult539!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult539 = toOM(authenticationResult539, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDate")));
                                                    addHeader(omElementauthenticationResult539,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPlcAvailablePointsByDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPlcAvailablePointsByDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetPlcAvailablePointsByDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDate(f);
                                            }
									    } else {
										    callback.receiveErrorgetPlcAvailablePointsByDate(f);
									    }
									} else {
									    callback.receiveErrorgetPlcAvailablePointsByDate(f);
									}
								} else {
								    callback.receiveErrorgetPlcAvailablePointsByDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPlcAvailablePointsByDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[29].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[29].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCSRAuthenticationToken
                     * @param getCSRAuthenticationToken541
                    
                     * @param authenticationResult542
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse getCSRAuthenticationToken(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken getCSRAuthenticationToken541,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult542)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCSRAuthenticationToken");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCSRAuthenticationToken541,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCSRAuthenticationToken")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCSRAuthenticationToken"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult542!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult542 = toOM(authenticationResult542, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCSRAuthenticationToken")));
                                                    addHeader(omElementauthenticationResult542,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCSRAuthenticationToken
                    * @param getCSRAuthenticationToken541
                
                    * @param authenticationResult542
                
                */
                public  void startgetCSRAuthenticationToken(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken getCSRAuthenticationToken541,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult542,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCSRAuthenticationToken");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCSRAuthenticationToken541,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCSRAuthenticationToken")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCSRAuthenticationToken"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult542!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult542 = toOM(authenticationResult542, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCSRAuthenticationToken")));
                                                    addHeader(omElementauthenticationResult542,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCSRAuthenticationToken(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCSRAuthenticationToken(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCSRAuthenticationToken"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCSRAuthenticationToken(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCSRAuthenticationToken(f);
                                            }
									    } else {
										    callback.receiveErrorgetCSRAuthenticationToken(f);
									    }
									} else {
									    callback.receiveErrorgetCSRAuthenticationToken(f);
									}
								} else {
								    callback.receiveErrorgetCSRAuthenticationToken(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCSRAuthenticationToken(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[30].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[30].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#adjustShopperPointsWithRedemptionCustomAttributeCheck
                     * @param adjustShopperPointsWithRedemptionCustomAttributeCheck544
                    
                     * @param authenticationResult545
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse adjustShopperPointsWithRedemptionCustomAttributeCheck(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck adjustShopperPointsWithRedemptionCustomAttributeCheck544,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult545)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithRedemptionCustomAttributeCheck");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithRedemptionCustomAttributeCheck544,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithRedemptionCustomAttributeCheck")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithRedemptionCustomAttributeCheck"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult545!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult545 = toOM(authenticationResult545, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithRedemptionCustomAttributeCheck")));
                                                    addHeader(omElementauthenticationResult545,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startadjustShopperPointsWithRedemptionCustomAttributeCheck
                    * @param adjustShopperPointsWithRedemptionCustomAttributeCheck544
                
                    * @param authenticationResult545
                
                */
                public  void startadjustShopperPointsWithRedemptionCustomAttributeCheck(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck adjustShopperPointsWithRedemptionCustomAttributeCheck544,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult545,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithRedemptionCustomAttributeCheck");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithRedemptionCustomAttributeCheck544,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithRedemptionCustomAttributeCheck")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithRedemptionCustomAttributeCheck"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult545!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult545 = toOM(authenticationResult545, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithRedemptionCustomAttributeCheck")));
                                                    addHeader(omElementauthenticationResult545,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultadjustShopperPointsWithRedemptionCustomAttributeCheck(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithRedemptionCustomAttributeCheck"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
                                            }
									    } else {
										    callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
									    }
									} else {
									    callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(f);
									}
								} else {
								    callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroradjustShopperPointsWithRedemptionCustomAttributeCheck(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[31].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[31].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#sendCommunicationToEmailAddress
                     * @param sendCommunicationToEmailAddress547
                    
                     * @param authenticationResult548
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse sendCommunicationToEmailAddress(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress sendCommunicationToEmailAddress547,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult548)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToEmailAddress");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToEmailAddress547,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddress")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddress"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult548!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult548 = toOM(authenticationResult548, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddress")));
                                                    addHeader(omElementauthenticationResult548,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startsendCommunicationToEmailAddress
                    * @param sendCommunicationToEmailAddress547
                
                    * @param authenticationResult548
                
                */
                public  void startsendCommunicationToEmailAddress(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress sendCommunicationToEmailAddress547,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult548,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToEmailAddress");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToEmailAddress547,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddress")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddress"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult548!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult548 = toOM(authenticationResult548, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddress")));
                                                    addHeader(omElementauthenticationResult548,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendCommunicationToEmailAddress(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendCommunicationToEmailAddress(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddress"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorsendCommunicationToEmailAddress(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddress(f);
                                            }
									    } else {
										    callback.receiveErrorsendCommunicationToEmailAddress(f);
									    }
									} else {
									    callback.receiveErrorsendCommunicationToEmailAddress(f);
									}
								} else {
								    callback.receiveErrorsendCommunicationToEmailAddress(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendCommunicationToEmailAddress(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[32].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[32].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#referFriend
                     * @param referFriend550
                    
                     * @param authenticationResult551
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse referFriend(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend referFriend550,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult551)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ReferFriend");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    referFriend550,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "referFriend")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "referFriend"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult551!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult551 = toOM(authenticationResult551, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "referFriend")));
                                                    addHeader(omElementauthenticationResult551,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startreferFriend
                    * @param referFriend550
                
                    * @param authenticationResult551
                
                */
                public  void startreferFriend(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend referFriend550,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult551,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ReferFriend");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    referFriend550,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "referFriend")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "referFriend"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult551!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult551 = toOM(authenticationResult551, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "referFriend")));
                                                    addHeader(omElementauthenticationResult551,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultreferFriend(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorreferFriend(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReferFriend"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorreferFriend(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreferFriend(f);
                                            }
									    } else {
										    callback.receiveErrorreferFriend(f);
									    }
									} else {
									    callback.receiveErrorreferFriend(f);
									}
								} else {
								    callback.receiveErrorreferFriend(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorreferFriend(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[33].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[33].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalanceByBalanceType
                     * @param getShopperPointBalanceByBalanceType553
                    
                     * @param authenticationResult554
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse getShopperPointBalanceByBalanceType(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType getShopperPointBalanceByBalanceType553,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult554)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByBalanceType");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByBalanceType553,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByBalanceType")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByBalanceType"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult554!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult554 = toOM(authenticationResult554, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByBalanceType")));
                                                    addHeader(omElementauthenticationResult554,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalanceByBalanceType
                    * @param getShopperPointBalanceByBalanceType553
                
                    * @param authenticationResult554
                
                */
                public  void startgetShopperPointBalanceByBalanceType(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType getShopperPointBalanceByBalanceType553,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult554,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByBalanceType");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByBalanceType553,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByBalanceType")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByBalanceType"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult554!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult554 = toOM(authenticationResult554, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByBalanceType")));
                                                    addHeader(omElementauthenticationResult554,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalanceByBalanceType(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalanceByBalanceType(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByBalanceType"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalanceByBalanceType(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalanceByBalanceType(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalanceByBalanceType(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalanceByBalanceType(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[34].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[34].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#pointsPurchaseWithPointGroup
                     * @param pointsPurchaseWithPointGroup556
                    
                     * @param authenticationResult557
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse pointsPurchaseWithPointGroup(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup pointsPurchaseWithPointGroup556,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult557)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/PointsPurchaseWithPointGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pointsPurchaseWithPointGroup556,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchaseWithPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchaseWithPointGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult557!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult557 = toOM(authenticationResult557, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchaseWithPointGroup")));
                                                    addHeader(omElementauthenticationResult557,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startpointsPurchaseWithPointGroup
                    * @param pointsPurchaseWithPointGroup556
                
                    * @param authenticationResult557
                
                */
                public  void startpointsPurchaseWithPointGroup(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup pointsPurchaseWithPointGroup556,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult557,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/PointsPurchaseWithPointGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pointsPurchaseWithPointGroup556,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchaseWithPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchaseWithPointGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult557!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult557 = toOM(authenticationResult557, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchaseWithPointGroup")));
                                                    addHeader(omElementauthenticationResult557,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpointsPurchaseWithPointGroup(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpointsPurchaseWithPointGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchaseWithPointGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorpointsPurchaseWithPointGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchaseWithPointGroup(f);
                                            }
									    } else {
										    callback.receiveErrorpointsPurchaseWithPointGroup(f);
									    }
									} else {
									    callback.receiveErrorpointsPurchaseWithPointGroup(f);
									}
								} else {
								    callback.receiveErrorpointsPurchaseWithPointGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpointsPurchaseWithPointGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[35].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[35].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#addRewardProductToCatalog
                     * @param addRewardProductToCatalog559
                    
                     * @param authenticationResult560
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse addRewardProductToCatalog(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog addRewardProductToCatalog559,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult560)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddRewardProductToCatalog");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addRewardProductToCatalog559,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addRewardProductToCatalog")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addRewardProductToCatalog"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult560!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult560 = toOM(authenticationResult560, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addRewardProductToCatalog")));
                                                    addHeader(omElementauthenticationResult560,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startaddRewardProductToCatalog
                    * @param addRewardProductToCatalog559
                
                    * @param authenticationResult560
                
                */
                public  void startaddRewardProductToCatalog(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog addRewardProductToCatalog559,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult560,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddRewardProductToCatalog");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addRewardProductToCatalog559,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addRewardProductToCatalog")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addRewardProductToCatalog"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult560!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult560 = toOM(authenticationResult560, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addRewardProductToCatalog")));
                                                    addHeader(omElementauthenticationResult560,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddRewardProductToCatalog(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddRewardProductToCatalog(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddRewardProductToCatalog"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddRewardProductToCatalog(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddRewardProductToCatalog(f);
                                            }
									    } else {
										    callback.receiveErroraddRewardProductToCatalog(f);
									    }
									} else {
									    callback.receiveErroraddRewardProductToCatalog(f);
									}
								} else {
								    callback.receiveErroraddRewardProductToCatalog(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddRewardProductToCatalog(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[36].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[36].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#addShopperToTier
                     * @param addShopperToTier562
                    
                     * @param authenticationResult563
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse addShopperToTier(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier addShopperToTier562,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult563)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddShopperToTier");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addShopperToTier562,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToTier")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToTier"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult563!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult563 = toOM(authenticationResult563, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToTier")));
                                                    addHeader(omElementauthenticationResult563,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startaddShopperToTier
                    * @param addShopperToTier562
                
                    * @param authenticationResult563
                
                */
                public  void startaddShopperToTier(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier addShopperToTier562,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult563,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AddShopperToTier");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addShopperToTier562,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToTier")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "addShopperToTier"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult563!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult563 = toOM(authenticationResult563, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "addShopperToTier")));
                                                    addHeader(omElementauthenticationResult563,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddShopperToTier(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddShopperToTier(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddShopperToTier"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddShopperToTier(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddShopperToTier(f);
                                            }
									    } else {
										    callback.receiveErroraddShopperToTier(f);
									    }
									} else {
									    callback.receiveErroraddShopperToTier(f);
									}
								} else {
								    callback.receiveErroraddShopperToTier(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddShopperToTier(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[37].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[37].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointsExpiring
                     * @param getShopperPointsExpiring565
                    
                     * @param authenticationResult566
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse getShopperPointsExpiring(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring getShopperPointsExpiring565,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult566)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointsExpiring");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointsExpiring565,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointsExpiring")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointsExpiring"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult566!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult566 = toOM(authenticationResult566, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointsExpiring")));
                                                    addHeader(omElementauthenticationResult566,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointsExpiring
                    * @param getShopperPointsExpiring565
                
                    * @param authenticationResult566
                
                */
                public  void startgetShopperPointsExpiring(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring getShopperPointsExpiring565,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult566,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointsExpiring");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointsExpiring565,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointsExpiring")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointsExpiring"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult566!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult566 = toOM(authenticationResult566, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointsExpiring")));
                                                    addHeader(omElementauthenticationResult566,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointsExpiring(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointsExpiring(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointsExpiring"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointsExpiring(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointsExpiring(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointsExpiring(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointsExpiring(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointsExpiring(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointsExpiring(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[38].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[38].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#adjustShopperPointsWithExpirationDate
                     * @param adjustShopperPointsWithExpirationDate568
                    
                     * @param authenticationResult569
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse adjustShopperPointsWithExpirationDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate adjustShopperPointsWithExpirationDate568,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult569)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithExpirationDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithExpirationDate568,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult569!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult569 = toOM(authenticationResult569, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDate")));
                                                    addHeader(omElementauthenticationResult569,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startadjustShopperPointsWithExpirationDate
                    * @param adjustShopperPointsWithExpirationDate568
                
                    * @param authenticationResult569
                
                */
                public  void startadjustShopperPointsWithExpirationDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate adjustShopperPointsWithExpirationDate568,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult569,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithExpirationDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithExpirationDate568,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult569!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult569 = toOM(authenticationResult569, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDate")));
                                                    addHeader(omElementauthenticationResult569,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultadjustShopperPointsWithExpirationDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroradjustShopperPointsWithExpirationDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroradjustShopperPointsWithExpirationDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDate(f);
                                            }
									    } else {
										    callback.receiveErroradjustShopperPointsWithExpirationDate(f);
									    }
									} else {
									    callback.receiveErroradjustShopperPointsWithExpirationDate(f);
									}
								} else {
								    callback.receiveErroradjustShopperPointsWithExpirationDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroradjustShopperPointsWithExpirationDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[39].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[39].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getPurchaseAwardForReturns
                     * @param getPurchaseAwardForReturns571
                    
                     * @param authenticationResult572
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse getPurchaseAwardForReturns(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns getPurchaseAwardForReturns571,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult572)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPurchaseAwardForReturns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPurchaseAwardForReturns571,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPurchaseAwardForReturns")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPurchaseAwardForReturns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult572!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult572 = toOM(authenticationResult572, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPurchaseAwardForReturns")));
                                                    addHeader(omElementauthenticationResult572,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetPurchaseAwardForReturns
                    * @param getPurchaseAwardForReturns571
                
                    * @param authenticationResult572
                
                */
                public  void startgetPurchaseAwardForReturns(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns getPurchaseAwardForReturns571,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult572,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPurchaseAwardForReturns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPurchaseAwardForReturns571,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPurchaseAwardForReturns")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPurchaseAwardForReturns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult572!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult572 = toOM(authenticationResult572, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPurchaseAwardForReturns")));
                                                    addHeader(omElementauthenticationResult572,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPurchaseAwardForReturns(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPurchaseAwardForReturns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPurchaseAwardForReturns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetPurchaseAwardForReturns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPurchaseAwardForReturns(f);
                                            }
									    } else {
										    callback.receiveErrorgetPurchaseAwardForReturns(f);
									    }
									} else {
									    callback.receiveErrorgetPurchaseAwardForReturns(f);
									}
								} else {
								    callback.receiveErrorgetPurchaseAwardForReturns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPurchaseAwardForReturns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[40].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[40].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#enrollShopper
                     * @param enrollShopper574
                    
                     * @param authenticationResult575
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse enrollShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper enrollShopper574,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult575)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/EnrollShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    enrollShopper574,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "enrollShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "enrollShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult575!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult575 = toOM(authenticationResult575, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "enrollShopper")));
                                                    addHeader(omElementauthenticationResult575,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startenrollShopper
                    * @param enrollShopper574
                
                    * @param authenticationResult575
                
                */
                public  void startenrollShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper enrollShopper574,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult575,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/EnrollShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    enrollShopper574,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "enrollShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "enrollShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult575!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult575 = toOM(authenticationResult575, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "enrollShopper")));
                                                    addHeader(omElementauthenticationResult575,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultenrollShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorenrollShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"EnrollShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorenrollShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorenrollShopper(f);
                                            }
									    } else {
										    callback.receiveErrorenrollShopper(f);
									    }
									} else {
									    callback.receiveErrorenrollShopper(f);
									}
								} else {
								    callback.receiveErrorenrollShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorenrollShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[41].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[41].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getPlcAvailablePointsByDateByPointGroup
                     * @param getPlcAvailablePointsByDateByPointGroup577
                    
                     * @param authenticationResult578
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse getPlcAvailablePointsByDateByPointGroup(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup getPlcAvailablePointsByDateByPointGroup577,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult578)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPlcAvailablePointsByDateByPointGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlcAvailablePointsByDateByPointGroup577,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDateByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDateByPointGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult578!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult578 = toOM(authenticationResult578, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDateByPointGroup")));
                                                    addHeader(omElementauthenticationResult578,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetPlcAvailablePointsByDateByPointGroup
                    * @param getPlcAvailablePointsByDateByPointGroup577
                
                    * @param authenticationResult578
                
                */
                public  void startgetPlcAvailablePointsByDateByPointGroup(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup getPlcAvailablePointsByDateByPointGroup577,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult578,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPlcAvailablePointsByDateByPointGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlcAvailablePointsByDateByPointGroup577,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDateByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPlcAvailablePointsByDateByPointGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult578!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult578 = toOM(authenticationResult578, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPlcAvailablePointsByDateByPointGroup")));
                                                    addHeader(omElementauthenticationResult578,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPlcAvailablePointsByDateByPointGroup(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlcAvailablePointsByDateByPointGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
                                            }
									    } else {
										    callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
									    }
									} else {
									    callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(f);
									}
								} else {
								    callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPlcAvailablePointsByDateByPointGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[42].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[42].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperOffers
                     * @param getShopperOffers580
                    
                     * @param authenticationResult581
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse getShopperOffers(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers getShopperOffers580,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult581)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperOffers");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperOffers580,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult581!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult581 = toOM(authenticationResult581, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffers")));
                                                    addHeader(omElementauthenticationResult581,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperOffers
                    * @param getShopperOffers580
                
                    * @param authenticationResult581
                
                */
                public  void startgetShopperOffers(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers getShopperOffers580,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult581,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperOffers");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperOffers580,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffers"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult581!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult581 = toOM(authenticationResult581, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffers")));
                                                    addHeader(omElementauthenticationResult581,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperOffers(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperOffers(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffers"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperOffers(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffers(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperOffers(f);
									    }
									} else {
									    callback.receiveErrorgetShopperOffers(f);
									}
								} else {
								    callback.receiveErrorgetShopperOffers(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperOffers(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[43].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[43].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createRewardProduct
                     * @param createRewardProduct583
                    
                     * @param authenticationResult584
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse createRewardProduct(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct createRewardProduct583,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult584)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardProduct");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardProduct583,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardProduct")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardProduct"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult584!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult584 = toOM(authenticationResult584, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardProduct")));
                                                    addHeader(omElementauthenticationResult584,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateRewardProduct
                    * @param createRewardProduct583
                
                    * @param authenticationResult584
                
                */
                public  void startcreateRewardProduct(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct createRewardProduct583,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult584,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardProduct");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardProduct583,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardProduct")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardProduct"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult584!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult584 = toOM(authenticationResult584, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardProduct")));
                                                    addHeader(omElementauthenticationResult584,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateRewardProduct(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateRewardProduct(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardProduct"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateRewardProduct(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardProduct(f);
                                            }
									    } else {
										    callback.receiveErrorcreateRewardProduct(f);
									    }
									} else {
									    callback.receiveErrorcreateRewardProduct(f);
									}
								} else {
								    callback.receiveErrorcreateRewardProduct(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateRewardProduct(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[44].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[44].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getStores
                     * @param getStores586
                    
                     * @param authenticationResult587
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse getStores(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores getStores586,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult587)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetStores");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getStores586,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getStores")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getStores"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult587!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult587 = toOM(authenticationResult587, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getStores")));
                                                    addHeader(omElementauthenticationResult587,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetStores
                    * @param getStores586
                
                    * @param authenticationResult587
                
                */
                public  void startgetStores(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores getStores586,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult587,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetStores");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getStores586,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getStores")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getStores"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult587!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult587 = toOM(authenticationResult587, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getStores")));
                                                    addHeader(omElementauthenticationResult587,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetStores(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetStores(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetStores"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetStores(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetStores(f);
                                            }
									    } else {
										    callback.receiveErrorgetStores(f);
									    }
									} else {
									    callback.receiveErrorgetStores(f);
									}
								} else {
								    callback.receiveErrorgetStores(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetStores(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[45].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[45].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#redeemReward
                     * @param redeemReward589
                    
                     * @param authenticationResult590
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse redeemReward(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward redeemReward589,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult590)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemReward");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemReward589,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemReward")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemReward"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult590!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult590 = toOM(authenticationResult590, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemReward")));
                                                    addHeader(omElementauthenticationResult590,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startredeemReward
                    * @param redeemReward589
                
                    * @param authenticationResult590
                
                */
                public  void startredeemReward(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward redeemReward589,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult590,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemReward");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemReward589,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemReward")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemReward"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult590!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult590 = toOM(authenticationResult590, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemReward")));
                                                    addHeader(omElementauthenticationResult590,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultredeemReward(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorredeemReward(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemReward"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorredeemReward(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemReward(f);
                                            }
									    } else {
										    callback.receiveErrorredeemReward(f);
									    }
									} else {
									    callback.receiveErrorredeemReward(f);
									}
								} else {
								    callback.receiveErrorredeemReward(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorredeemReward(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[46].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[46].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createAndScoreShopper
                     * @param createAndScoreShopper592
                    
                     * @param authenticationResult593
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse createAndScoreShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper createAndScoreShopper592,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult593)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateAndScoreShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createAndScoreShopper592,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createAndScoreShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createAndScoreShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult593!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult593 = toOM(authenticationResult593, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createAndScoreShopper")));
                                                    addHeader(omElementauthenticationResult593,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateAndScoreShopper
                    * @param createAndScoreShopper592
                
                    * @param authenticationResult593
                
                */
                public  void startcreateAndScoreShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper createAndScoreShopper592,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult593,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateAndScoreShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createAndScoreShopper592,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createAndScoreShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createAndScoreShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult593!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult593 = toOM(authenticationResult593, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createAndScoreShopper")));
                                                    addHeader(omElementauthenticationResult593,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateAndScoreShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateAndScoreShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateAndScoreShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateAndScoreShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateAndScoreShopper(f);
                                            }
									    } else {
										    callback.receiveErrorcreateAndScoreShopper(f);
									    }
									} else {
									    callback.receiveErrorcreateAndScoreShopper(f);
									}
								} else {
								    callback.receiveErrorcreateAndScoreShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateAndScoreShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[47].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[47].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByRetailerID
                     * @param getShopperByRetailerID595
                    
                     * @param authenticationResult596
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse getShopperByRetailerID(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID getShopperByRetailerID595,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult596)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByRetailerID");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByRetailerID595,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRetailerID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult596!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult596 = toOM(authenticationResult596, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRetailerID")));
                                                    addHeader(omElementauthenticationResult596,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByRetailerID
                    * @param getShopperByRetailerID595
                
                    * @param authenticationResult596
                
                */
                public  void startgetShopperByRetailerID(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID getShopperByRetailerID595,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult596,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByRetailerID");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByRetailerID595,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRetailerID"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult596!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult596 = toOM(authenticationResult596, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRetailerID")));
                                                    addHeader(omElementauthenticationResult596,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByRetailerID(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByRetailerID(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRetailerID"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByRetailerID(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRetailerID(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByRetailerID(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByRetailerID(f);
									}
								} else {
								    callback.receiveErrorgetShopperByRetailerID(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByRetailerID(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[48].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[48].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getPointPrices
                     * @param getPointPrices598
                    
                     * @param authenticationResult599
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse getPointPrices(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices getPointPrices598,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult599)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPointPrices");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPointPrices598,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPointPrices")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPointPrices"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult599!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult599 = toOM(authenticationResult599, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPointPrices")));
                                                    addHeader(omElementauthenticationResult599,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetPointPrices
                    * @param getPointPrices598
                
                    * @param authenticationResult599
                
                */
                public  void startgetPointPrices(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices getPointPrices598,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult599,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetPointPrices");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPointPrices598,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPointPrices")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getPointPrices"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult599!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult599 = toOM(authenticationResult599, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getPointPrices")));
                                                    addHeader(omElementauthenticationResult599,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPointPrices(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPointPrices(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPointPrices"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetPointPrices(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPointPrices(f);
                                            }
									    } else {
										    callback.receiveErrorgetPointPrices(f);
									    }
									} else {
									    callback.receiveErrorgetPointPrices(f);
									}
								} else {
								    callback.receiveErrorgetPointPrices(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPointPrices(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[49].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[49].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#importTransaction
                     * @param importTransaction601
                    
                     * @param authenticationResult602
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse importTransaction(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction importTransaction601,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult602)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ImportTransaction");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    importTransaction601,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransaction")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransaction"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult602!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult602 = toOM(authenticationResult602, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransaction")));
                                                    addHeader(omElementauthenticationResult602,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startimportTransaction
                    * @param importTransaction601
                
                    * @param authenticationResult602
                
                */
                public  void startimportTransaction(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction importTransaction601,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult602,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ImportTransaction");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    importTransaction601,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransaction")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransaction"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult602!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult602 = toOM(authenticationResult602, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransaction")));
                                                    addHeader(omElementauthenticationResult602,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultimportTransaction(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorimportTransaction(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransaction"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorimportTransaction(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransaction(f);
                                            }
									    } else {
										    callback.receiveErrorimportTransaction(f);
									    }
									} else {
									    callback.receiveErrorimportTransaction(f);
									}
								} else {
								    callback.receiveErrorimportTransaction(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorimportTransaction(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[50].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[50].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#shopperSignIn
                     * @param shopperSignIn604
                    
                     * @param authenticationResult605
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse shopperSignIn(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn shopperSignIn604,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult605)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ShopperSignIn");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    shopperSignIn604,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "shopperSignIn")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "shopperSignIn"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult605!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult605 = toOM(authenticationResult605, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "shopperSignIn")));
                                                    addHeader(omElementauthenticationResult605,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startshopperSignIn
                    * @param shopperSignIn604
                
                    * @param authenticationResult605
                
                */
                public  void startshopperSignIn(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn shopperSignIn604,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult605,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ShopperSignIn");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    shopperSignIn604,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "shopperSignIn")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "shopperSignIn"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult605!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult605 = toOM(authenticationResult605, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "shopperSignIn")));
                                                    addHeader(omElementauthenticationResult605,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultshopperSignIn(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorshopperSignIn(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ShopperSignIn"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorshopperSignIn(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorshopperSignIn(f);
                                            }
									    } else {
										    callback.receiveErrorshopperSignIn(f);
									    }
									} else {
									    callback.receiveErrorshopperSignIn(f);
									}
								} else {
								    callback.receiveErrorshopperSignIn(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorshopperSignIn(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[51].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[51].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#unEnrollShopper
                     * @param unEnrollShopper607
                    
                     * @param authenticationResult608
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse unEnrollShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper unEnrollShopper607,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult608)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UnEnrollShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    unEnrollShopper607,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "unEnrollShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "unEnrollShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult608!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult608 = toOM(authenticationResult608, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "unEnrollShopper")));
                                                    addHeader(omElementauthenticationResult608,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startunEnrollShopper
                    * @param unEnrollShopper607
                
                    * @param authenticationResult608
                
                */
                public  void startunEnrollShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper unEnrollShopper607,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult608,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UnEnrollShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    unEnrollShopper607,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "unEnrollShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "unEnrollShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult608!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult608 = toOM(authenticationResult608, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "unEnrollShopper")));
                                                    addHeader(omElementauthenticationResult608,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultunEnrollShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorunEnrollShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UnEnrollShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorunEnrollShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorunEnrollShopper(f);
                                            }
									    } else {
										    callback.receiveErrorunEnrollShopper(f);
									    }
									} else {
									    callback.receiveErrorunEnrollShopper(f);
									}
								} else {
								    callback.receiveErrorunEnrollShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorunEnrollShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[52].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[52].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperAuthenticationToken
                     * @param getShopperAuthenticationToken610
                    
                     * @param authenticationResult611
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse getShopperAuthenticationToken(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken getShopperAuthenticationToken610,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult611)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperAuthenticationToken");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperAuthenticationToken610,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationToken")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationToken"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult611!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult611 = toOM(authenticationResult611, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationToken")));
                                                    addHeader(omElementauthenticationResult611,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperAuthenticationToken
                    * @param getShopperAuthenticationToken610
                
                    * @param authenticationResult611
                
                */
                public  void startgetShopperAuthenticationToken(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken getShopperAuthenticationToken610,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult611,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperAuthenticationToken");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperAuthenticationToken610,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationToken")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperAuthenticationToken"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult611!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult611 = toOM(authenticationResult611, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperAuthenticationToken")));
                                                    addHeader(omElementauthenticationResult611,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperAuthenticationToken(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperAuthenticationToken(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperAuthenticationToken"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperAuthenticationToken(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperAuthenticationToken(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperAuthenticationToken(f);
									    }
									} else {
									    callback.receiveErrorgetShopperAuthenticationToken(f);
									}
								} else {
								    callback.receiveErrorgetShopperAuthenticationToken(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperAuthenticationToken(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[53].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[53].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByUserName
                     * @param getShopperByUserName613
                    
                     * @param authenticationResult614
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse getShopperByUserName(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName getShopperByUserName613,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult614)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByUserName");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByUserName613,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByUserName")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByUserName"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult614!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult614 = toOM(authenticationResult614, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByUserName")));
                                                    addHeader(omElementauthenticationResult614,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByUserName
                    * @param getShopperByUserName613
                
                    * @param authenticationResult614
                
                */
                public  void startgetShopperByUserName(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName getShopperByUserName613,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult614,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByUserName");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByUserName613,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByUserName")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByUserName"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult614!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult614 = toOM(authenticationResult614, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByUserName")));
                                                    addHeader(omElementauthenticationResult614,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByUserName(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByUserName(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByUserName"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByUserName(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByUserName(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByUserName(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByUserName(f);
									}
								} else {
								    callback.receiveErrorgetShopperByUserName(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByUserName(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[54].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[54].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateRewardProduct
                     * @param updateRewardProduct616
                    
                     * @param authenticationResult617
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse updateRewardProduct(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct updateRewardProduct616,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult617)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateRewardProduct");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateRewardProduct616,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateRewardProduct")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateRewardProduct"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult617!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult617 = toOM(authenticationResult617, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateRewardProduct")));
                                                    addHeader(omElementauthenticationResult617,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateRewardProduct
                    * @param updateRewardProduct616
                
                    * @param authenticationResult617
                
                */
                public  void startupdateRewardProduct(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct updateRewardProduct616,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult617,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateRewardProduct");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateRewardProduct616,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateRewardProduct")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateRewardProduct"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult617!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult617 = toOM(authenticationResult617, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateRewardProduct")));
                                                    addHeader(omElementauthenticationResult617,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateRewardProduct(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateRewardProduct(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateRewardProduct"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateRewardProduct(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateRewardProduct(f);
                                            }
									    } else {
										    callback.receiveErrorupdateRewardProduct(f);
									    }
									} else {
									    callback.receiveErrorupdateRewardProduct(f);
									}
								} else {
								    callback.receiveErrorupdateRewardProduct(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateRewardProduct(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[55].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[55].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalance
                     * @param getShopperPointBalance619
                    
                     * @param authenticationResult620
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse getShopperPointBalance(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance getShopperPointBalance619,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult620)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalance");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalance619,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalance")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalance"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult620!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult620 = toOM(authenticationResult620, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalance")));
                                                    addHeader(omElementauthenticationResult620,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalance
                    * @param getShopperPointBalance619
                
                    * @param authenticationResult620
                
                */
                public  void startgetShopperPointBalance(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance getShopperPointBalance619,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult620,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalance");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalance619,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalance")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalance"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult620!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult620 = toOM(authenticationResult620, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalance")));
                                                    addHeader(omElementauthenticationResult620,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalance(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalance(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalance"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalance(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalance(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalance(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalance(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalance(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalance(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[56].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[56].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalanceByPointGroup
                     * @param getShopperPointBalanceByPointGroup622
                    
                     * @param authenticationResult623
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse getShopperPointBalanceByPointGroup(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup getShopperPointBalanceByPointGroup622,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult623)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByPointGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByPointGroup622,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult623!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult623 = toOM(authenticationResult623, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointGroup")));
                                                    addHeader(omElementauthenticationResult623,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalanceByPointGroup
                    * @param getShopperPointBalanceByPointGroup622
                
                    * @param authenticationResult623
                
                */
                public  void startgetShopperPointBalanceByPointGroup(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup getShopperPointBalanceByPointGroup622,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult623,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByPointGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByPointGroup622,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult623!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult623 = toOM(authenticationResult623, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointGroup")));
                                                    addHeader(omElementauthenticationResult623,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalanceByPointGroup(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalanceByPointGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalanceByPointGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalanceByPointGroup(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalanceByPointGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalanceByPointGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[57].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[57].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTransactionsWithTenders
                     * @param getTransactionsWithTenders625
                    
                     * @param authenticationResult626
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse getTransactionsWithTenders(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders getTransactionsWithTenders625,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult626)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactionsWithTenders");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactionsWithTenders625,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsWithTenders")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsWithTenders"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult626!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult626 = toOM(authenticationResult626, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsWithTenders")));
                                                    addHeader(omElementauthenticationResult626,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTransactionsWithTenders
                    * @param getTransactionsWithTenders625
                
                    * @param authenticationResult626
                
                */
                public  void startgetTransactionsWithTenders(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders getTransactionsWithTenders625,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult626,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactionsWithTenders");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactionsWithTenders625,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsWithTenders")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsWithTenders"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult626!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult626 = toOM(authenticationResult626, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsWithTenders")));
                                                    addHeader(omElementauthenticationResult626,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTransactionsWithTenders(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTransactionsWithTenders(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsWithTenders"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTransactionsWithTenders(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsWithTenders(f);
                                            }
									    } else {
										    callback.receiveErrorgetTransactionsWithTenders(f);
									    }
									} else {
									    callback.receiveErrorgetTransactionsWithTenders(f);
									}
								} else {
								    callback.receiveErrorgetTransactionsWithTenders(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTransactionsWithTenders(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[58].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[58].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#adjustShopperPoints
                     * @param adjustShopperPoints628
                    
                     * @param authenticationResult629
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse adjustShopperPoints(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints adjustShopperPoints628,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult629)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPoints");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPoints628,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPoints")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPoints"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult629!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult629 = toOM(authenticationResult629, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPoints")));
                                                    addHeader(omElementauthenticationResult629,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startadjustShopperPoints
                    * @param adjustShopperPoints628
                
                    * @param authenticationResult629
                
                */
                public  void startadjustShopperPoints(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints adjustShopperPoints628,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult629,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPoints");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPoints628,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPoints")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPoints"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult629!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult629 = toOM(authenticationResult629, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPoints")));
                                                    addHeader(omElementauthenticationResult629,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultadjustShopperPoints(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroradjustShopperPoints(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPoints"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroradjustShopperPoints(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPoints(f);
                                            }
									    } else {
										    callback.receiveErroradjustShopperPoints(f);
									    }
									} else {
									    callback.receiveErroradjustShopperPoints(f);
									}
								} else {
								    callback.receiveErroradjustShopperPoints(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroradjustShopperPoints(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[59].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[59].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShoppersByPhoneNumber
                     * @param getShoppersByPhoneNumber631
                    
                     * @param authenticationResult632
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse getShoppersByPhoneNumber(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber getShoppersByPhoneNumber631,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult632)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByPhoneNumber");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByPhoneNumber631,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumber")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumber"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult632!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult632 = toOM(authenticationResult632, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumber")));
                                                    addHeader(omElementauthenticationResult632,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShoppersByPhoneNumber
                    * @param getShoppersByPhoneNumber631
                
                    * @param authenticationResult632
                
                */
                public  void startgetShoppersByPhoneNumber(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber getShoppersByPhoneNumber631,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult632,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByPhoneNumber");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByPhoneNumber631,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumber")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByPhoneNumber"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult632!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult632 = toOM(authenticationResult632, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByPhoneNumber")));
                                                    addHeader(omElementauthenticationResult632,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShoppersByPhoneNumber(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShoppersByPhoneNumber(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByPhoneNumber"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShoppersByPhoneNumber(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByPhoneNumber(f);
                                            }
									    } else {
										    callback.receiveErrorgetShoppersByPhoneNumber(f);
									    }
									} else {
									    callback.receiveErrorgetShoppersByPhoneNumber(f);
									}
								} else {
								    callback.receiveErrorgetShoppersByPhoneNumber(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShoppersByPhoneNumber(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[60].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[60].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateShopper
                     * @param updateShopper634
                    
                     * @param authenticationResult635
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse updateShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper updateShopper634,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult635)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopper634,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult635!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult635 = toOM(authenticationResult635, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopper")));
                                                    addHeader(omElementauthenticationResult635,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateShopper
                    * @param updateShopper634
                
                    * @param authenticationResult635
                
                */
                public  void startupdateShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper updateShopper634,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult635,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopper634,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult635!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult635 = toOM(authenticationResult635, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopper")));
                                                    addHeader(omElementauthenticationResult635,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopper(f);
                                            }
									    } else {
										    callback.receiveErrorupdateShopper(f);
									    }
									} else {
									    callback.receiveErrorupdateShopper(f);
									}
								} else {
								    callback.receiveErrorupdateShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[61].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[61].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateCustomAttributes
                     * @param updateCustomAttributes637
                    
                     * @param authenticationResult638
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse updateCustomAttributes(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes updateCustomAttributes637,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult638)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomAttributes");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomAttributes637,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttributes"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult638!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult638 = toOM(authenticationResult638, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttributes")));
                                                    addHeader(omElementauthenticationResult638,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateCustomAttributes
                    * @param updateCustomAttributes637
                
                    * @param authenticationResult638
                
                */
                public  void startupdateCustomAttributes(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes updateCustomAttributes637,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult638,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomAttributes");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomAttributes637,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttributes"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult638!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult638 = toOM(authenticationResult638, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttributes")));
                                                    addHeader(omElementauthenticationResult638,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCustomAttributes(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCustomAttributes(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttributes"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateCustomAttributes(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttributes(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCustomAttributes(f);
									    }
									} else {
									    callback.receiveErrorupdateCustomAttributes(f);
									}
								} else {
								    callback.receiveErrorupdateCustomAttributes(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCustomAttributes(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[62].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[62].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getProfilesByShopperId
                     * @param getProfilesByShopperId640
                    
                     * @param authenticationResult641
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse getProfilesByShopperId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId getProfilesByShopperId640,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult641)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetProfilesByShopperId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getProfilesByShopperId640,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProfilesByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProfilesByShopperId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult641!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult641 = toOM(authenticationResult641, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProfilesByShopperId")));
                                                    addHeader(omElementauthenticationResult641,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetProfilesByShopperId
                    * @param getProfilesByShopperId640
                
                    * @param authenticationResult641
                
                */
                public  void startgetProfilesByShopperId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId getProfilesByShopperId640,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult641,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetProfilesByShopperId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getProfilesByShopperId640,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProfilesByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProfilesByShopperId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult641!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult641 = toOM(authenticationResult641, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProfilesByShopperId")));
                                                    addHeader(omElementauthenticationResult641,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetProfilesByShopperId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetProfilesByShopperId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProfilesByShopperId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetProfilesByShopperId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProfilesByShopperId(f);
                                            }
									    } else {
										    callback.receiveErrorgetProfilesByShopperId(f);
									    }
									} else {
									    callback.receiveErrorgetProfilesByShopperId(f);
									}
								} else {
								    callback.receiveErrorgetProfilesByShopperId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetProfilesByShopperId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[63].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[63].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by Loyalty Lab's internal shopper identifier.
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTotalPointsEarnedByShopperId
                     * @param getTotalPointsEarnedByShopperId643
                    
                     * @param authenticationResult644
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse getTotalPointsEarnedByShopperId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId getTotalPointsEarnedByShopperId643,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult644)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByShopperId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByShopperId643,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByShopperId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult644!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult644 = toOM(authenticationResult644, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByShopperId")));
                                                    addHeader(omElementauthenticationResult644,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by Loyalty Lab's internal shopper identifier.
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTotalPointsEarnedByShopperId
                    * @param getTotalPointsEarnedByShopperId643
                
                    * @param authenticationResult644
                
                */
                public  void startgetTotalPointsEarnedByShopperId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId getTotalPointsEarnedByShopperId643,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult644,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByShopperId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByShopperId643,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByShopperId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByShopperId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult644!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult644 = toOM(authenticationResult644, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByShopperId")));
                                                    addHeader(omElementauthenticationResult644,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTotalPointsEarnedByShopperId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTotalPointsEarnedByShopperId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByShopperId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTotalPointsEarnedByShopperId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
                                            }
									    } else {
										    callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
									    }
									} else {
									    callback.receiveErrorgetTotalPointsEarnedByShopperId(f);
									}
								} else {
								    callback.receiveErrorgetTotalPointsEarnedByShopperId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTotalPointsEarnedByShopperId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[64].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[64].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCodesForShopper
                     * @param getCodesForShopper646
                    
                     * @param authenticationResult647
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse getCodesForShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper getCodesForShopper646,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult647)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCodesForShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCodesForShopper646,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesForShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult647!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult647 = toOM(authenticationResult647, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesForShopper")));
                                                    addHeader(omElementauthenticationResult647,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCodesForShopper
                    * @param getCodesForShopper646
                
                    * @param authenticationResult647
                
                */
                public  void startgetCodesForShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper getCodesForShopper646,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult647,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCodesForShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCodesForShopper646,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesForShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult647!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult647 = toOM(authenticationResult647, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesForShopper")));
                                                    addHeader(omElementauthenticationResult647,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCodesForShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCodesForShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesForShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCodesForShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesForShopper(f);
                                            }
									    } else {
										    callback.receiveErrorgetCodesForShopper(f);
									    }
									} else {
									    callback.receiveErrorgetCodesForShopper(f);
									}
								} else {
								    callback.receiveErrorgetCodesForShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCodesForShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[65].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[65].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#pointsPurchase
                     * @param pointsPurchase649
                    
                     * @param authenticationResult650
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse pointsPurchase(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase pointsPurchase649,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult650)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/PointsPurchase");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pointsPurchase649,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchase")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchase"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult650!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult650 = toOM(authenticationResult650, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchase")));
                                                    addHeader(omElementauthenticationResult650,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startpointsPurchase
                    * @param pointsPurchase649
                
                    * @param authenticationResult650
                
                */
                public  void startpointsPurchase(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase pointsPurchase649,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult650,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/PointsPurchase");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pointsPurchase649,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchase")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "pointsPurchase"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult650!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult650 = toOM(authenticationResult650, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "pointsPurchase")));
                                                    addHeader(omElementauthenticationResult650,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpointsPurchase(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpointsPurchase(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PointsPurchase"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorpointsPurchase(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpointsPurchase(f);
                                            }
									    } else {
										    callback.receiveErrorpointsPurchase(f);
									    }
									} else {
									    callback.receiveErrorpointsPurchase(f);
									}
								} else {
								    callback.receiveErrorpointsPurchase(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpointsPurchase(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[66].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[66].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getProductBySKU
                     * @param getProductBySKU652
                    
                     * @param authenticationResult653
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse getProductBySKU(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU getProductBySKU652,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult653)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetProductBySKU");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getProductBySKU652,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProductBySKU")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProductBySKU"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult653!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult653 = toOM(authenticationResult653, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProductBySKU")));
                                                    addHeader(omElementauthenticationResult653,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetProductBySKU
                    * @param getProductBySKU652
                
                    * @param authenticationResult653
                
                */
                public  void startgetProductBySKU(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU getProductBySKU652,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult653,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetProductBySKU");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getProductBySKU652,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProductBySKU")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getProductBySKU"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult653!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult653 = toOM(authenticationResult653, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getProductBySKU")));
                                                    addHeader(omElementauthenticationResult653,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetProductBySKU(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetProductBySKU(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetProductBySKU"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetProductBySKU(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetProductBySKU(f);
                                            }
									    } else {
										    callback.receiveErrorgetProductBySKU(f);
									    }
									} else {
									    callback.receiveErrorgetProductBySKU(f);
									}
								} else {
								    callback.receiveErrorgetProductBySKU(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetProductBySKU(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[67].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[67].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getReferedFriends
                     * @param getReferedFriends655
                    
                     * @param authenticationResult656
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse getReferedFriends(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends getReferedFriends655,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult656)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferedFriends");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferedFriends655,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferedFriends")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferedFriends"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult656!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult656 = toOM(authenticationResult656, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferedFriends")));
                                                    addHeader(omElementauthenticationResult656,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetReferedFriends
                    * @param getReferedFriends655
                
                    * @param authenticationResult656
                
                */
                public  void startgetReferedFriends(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends getReferedFriends655,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult656,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetReferedFriends");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getReferedFriends655,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferedFriends")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getReferedFriends"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult656!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult656 = toOM(authenticationResult656, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getReferedFriends")));
                                                    addHeader(omElementauthenticationResult656,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetReferedFriends(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetReferedFriends(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetReferedFriends"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetReferedFriends(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetReferedFriends(f);
                                            }
									    } else {
										    callback.receiveErrorgetReferedFriends(f);
									    }
									} else {
									    callback.receiveErrorgetReferedFriends(f);
									}
								} else {
								    callback.receiveErrorgetReferedFriends(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetReferedFriends(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[68].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[68].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewardCatalogByRetailerCatalogId
                     * @param getRewardCatalogByRetailerCatalogId658
                    
                     * @param authenticationResult659
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse getRewardCatalogByRetailerCatalogId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId getRewardCatalogByRetailerCatalogId658,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult659)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogByRetailerCatalogId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogByRetailerCatalogId658,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogByRetailerCatalogId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogByRetailerCatalogId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult659!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult659 = toOM(authenticationResult659, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogByRetailerCatalogId")));
                                                    addHeader(omElementauthenticationResult659,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewardCatalogByRetailerCatalogId
                    * @param getRewardCatalogByRetailerCatalogId658
                
                    * @param authenticationResult659
                
                */
                public  void startgetRewardCatalogByRetailerCatalogId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId getRewardCatalogByRetailerCatalogId658,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult659,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardCatalogByRetailerCatalogId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardCatalogByRetailerCatalogId658,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogByRetailerCatalogId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardCatalogByRetailerCatalogId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult659!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult659 = toOM(authenticationResult659, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardCatalogByRetailerCatalogId")));
                                                    addHeader(omElementauthenticationResult659,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewardCatalogByRetailerCatalogId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardCatalogByRetailerCatalogId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewardCatalogByRetailerCatalogId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
									    }
									} else {
									    callback.receiveErrorgetRewardCatalogByRetailerCatalogId(f);
									}
								} else {
								    callback.receiveErrorgetRewardCatalogByRetailerCatalogId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewardCatalogByRetailerCatalogId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[69].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[69].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRewardProductByUniqueSKU
                     * @param getRewardProductByUniqueSKU661
                    
                     * @param authenticationResult662
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse getRewardProductByUniqueSKU(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU getRewardProductByUniqueSKU661,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult662)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardProductByUniqueSKU");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardProductByUniqueSKU661,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductByUniqueSKU")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductByUniqueSKU"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult662!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult662 = toOM(authenticationResult662, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductByUniqueSKU")));
                                                    addHeader(omElementauthenticationResult662,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRewardProductByUniqueSKU
                    * @param getRewardProductByUniqueSKU661
                
                    * @param authenticationResult662
                
                */
                public  void startgetRewardProductByUniqueSKU(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU getRewardProductByUniqueSKU661,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult662,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRewardProductByUniqueSKU");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRewardProductByUniqueSKU661,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductByUniqueSKU")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRewardProductByUniqueSKU"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult662!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult662 = toOM(authenticationResult662, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRewardProductByUniqueSKU")));
                                                    addHeader(omElementauthenticationResult662,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRewardProductByUniqueSKU(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRewardProductByUniqueSKU(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRewardProductByUniqueSKU"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRewardProductByUniqueSKU(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRewardProductByUniqueSKU(f);
                                            }
									    } else {
										    callback.receiveErrorgetRewardProductByUniqueSKU(f);
									    }
									} else {
									    callback.receiveErrorgetRewardProductByUniqueSKU(f);
									}
								} else {
								    callback.receiveErrorgetRewardProductByUniqueSKU(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRewardProductByUniqueSKU(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[70].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[70].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#redeemShopperRewardCerificate
                     * @param redeemShopperRewardCerificate664
                    
                     * @param authenticationResult665
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse redeemShopperRewardCerificate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate redeemShopperRewardCerificate664,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult665)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemShopperRewardCerificate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemShopperRewardCerificate664,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemShopperRewardCerificate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemShopperRewardCerificate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult665!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult665 = toOM(authenticationResult665, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemShopperRewardCerificate")));
                                                    addHeader(omElementauthenticationResult665,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startredeemShopperRewardCerificate
                    * @param redeemShopperRewardCerificate664
                
                    * @param authenticationResult665
                
                */
                public  void startredeemShopperRewardCerificate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate redeemShopperRewardCerificate664,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult665,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RedeemShopperRewardCerificate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    redeemShopperRewardCerificate664,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemShopperRewardCerificate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "redeemShopperRewardCerificate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult665!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult665 = toOM(authenticationResult665, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "redeemShopperRewardCerificate")));
                                                    addHeader(omElementauthenticationResult665,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultredeemShopperRewardCerificate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorredeemShopperRewardCerificate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RedeemShopperRewardCerificate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorredeemShopperRewardCerificate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorredeemShopperRewardCerificate(f);
                                            }
									    } else {
										    callback.receiveErrorredeemShopperRewardCerificate(f);
									    }
									} else {
									    callback.receiveErrorredeemShopperRewardCerificate(f);
									}
								} else {
								    callback.receiveErrorredeemShopperRewardCerificate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorredeemShopperRewardCerificate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[71].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[71].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#changePointStateByLoyaltyLabId
                     * @param changePointStateByLoyaltyLabId667
                    
                     * @param authenticationResult668
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse changePointStateByLoyaltyLabId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId changePointStateByLoyaltyLabId667,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult668)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ChangePointStateByLoyaltyLabId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changePointStateByLoyaltyLabId667,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByLoyaltyLabId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByLoyaltyLabId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult668!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult668 = toOM(authenticationResult668, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByLoyaltyLabId")));
                                                    addHeader(omElementauthenticationResult668,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startchangePointStateByLoyaltyLabId
                    * @param changePointStateByLoyaltyLabId667
                
                    * @param authenticationResult668
                
                */
                public  void startchangePointStateByLoyaltyLabId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId changePointStateByLoyaltyLabId667,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult668,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ChangePointStateByLoyaltyLabId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changePointStateByLoyaltyLabId667,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByLoyaltyLabId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByLoyaltyLabId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult668!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult668 = toOM(authenticationResult668, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByLoyaltyLabId")));
                                                    addHeader(omElementauthenticationResult668,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultchangePointStateByLoyaltyLabId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorchangePointStateByLoyaltyLabId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByLoyaltyLabId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorchangePointStateByLoyaltyLabId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByLoyaltyLabId(f);
                                            }
									    } else {
										    callback.receiveErrorchangePointStateByLoyaltyLabId(f);
									    }
									} else {
									    callback.receiveErrorchangePointStateByLoyaltyLabId(f);
									}
								} else {
								    callback.receiveErrorchangePointStateByLoyaltyLabId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorchangePointStateByLoyaltyLabId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[72].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[72].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCodesWithSkuForShopper
                     * @param getCodesWithSkuForShopper670
                    
                     * @param authenticationResult671
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse getCodesWithSkuForShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper getCodesWithSkuForShopper670,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult671)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCodesWithSkuForShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCodesWithSkuForShopper670,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesWithSkuForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesWithSkuForShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult671!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult671 = toOM(authenticationResult671, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesWithSkuForShopper")));
                                                    addHeader(omElementauthenticationResult671,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCodesWithSkuForShopper
                    * @param getCodesWithSkuForShopper670
                
                    * @param authenticationResult671
                
                */
                public  void startgetCodesWithSkuForShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper getCodesWithSkuForShopper670,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult671,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCodesWithSkuForShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCodesWithSkuForShopper670,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesWithSkuForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCodesWithSkuForShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult671!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult671 = toOM(authenticationResult671, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCodesWithSkuForShopper")));
                                                    addHeader(omElementauthenticationResult671,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCodesWithSkuForShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCodesWithSkuForShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCodesWithSkuForShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCodesWithSkuForShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCodesWithSkuForShopper(f);
                                            }
									    } else {
										    callback.receiveErrorgetCodesWithSkuForShopper(f);
									    }
									} else {
									    callback.receiveErrorgetCodesWithSkuForShopper(f);
									}
								} else {
								    callback.receiveErrorgetCodesWithSkuForShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCodesWithSkuForShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[73].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[73].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByMergedVictimID
                     * @param getShopperByMergedVictimID673
                    
                     * @param authenticationResult674
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse getShopperByMergedVictimID(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID getShopperByMergedVictimID673,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult674)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByMergedVictimID");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByMergedVictimID673,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByMergedVictimID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByMergedVictimID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult674!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult674 = toOM(authenticationResult674, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByMergedVictimID")));
                                                    addHeader(omElementauthenticationResult674,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByMergedVictimID
                    * @param getShopperByMergedVictimID673
                
                    * @param authenticationResult674
                
                */
                public  void startgetShopperByMergedVictimID(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID getShopperByMergedVictimID673,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult674,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByMergedVictimID");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByMergedVictimID673,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByMergedVictimID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByMergedVictimID"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult674!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult674 = toOM(authenticationResult674, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByMergedVictimID")));
                                                    addHeader(omElementauthenticationResult674,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByMergedVictimID(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByMergedVictimID(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByMergedVictimID"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByMergedVictimID(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByMergedVictimID(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByMergedVictimID(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByMergedVictimID(f);
									}
								} else {
								    callback.receiveErrorgetShopperByMergedVictimID(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByMergedVictimID(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[74].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[74].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopper
                     * @param getShopper676
                    
                     * @param authenticationResult677
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse getShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper getShopper676,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult677)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopper676,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult677!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult677 = toOM(authenticationResult677, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopper")));
                                                    addHeader(omElementauthenticationResult677,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopper
                    * @param getShopper676
                
                    * @param authenticationResult677
                
                */
                public  void startgetShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper getShopper676,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult677,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopper676,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult677!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult677 = toOM(authenticationResult677, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopper")));
                                                    addHeader(omElementauthenticationResult677,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopper(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopper(f);
									    }
									} else {
									    callback.receiveErrorgetShopper(f);
									}
								} else {
								    callback.receiveErrorgetShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[75].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[75].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperRedemptionsByDate
                     * @param getShopperRedemptionsByDate679
                    
                     * @param authenticationResult680
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse getShopperRedemptionsByDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate getShopperRedemptionsByDate679,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult680)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByDate679,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult680!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult680 = toOM(authenticationResult680, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByDate")));
                                                    addHeader(omElementauthenticationResult680,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperRedemptionsByDate
                    * @param getShopperRedemptionsByDate679
                
                    * @param authenticationResult680
                
                */
                public  void startgetShopperRedemptionsByDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate getShopperRedemptionsByDate679,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult680,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByDate679,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult680!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult680 = toOM(authenticationResult680, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByDate")));
                                                    addHeader(omElementauthenticationResult680,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperRedemptionsByDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperRedemptionsByDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperRedemptionsByDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByDate(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperRedemptionsByDate(f);
									    }
									} else {
									    callback.receiveErrorgetShopperRedemptionsByDate(f);
									}
								} else {
								    callback.receiveErrorgetShopperRedemptionsByDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperRedemptionsByDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[76].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[76].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#mergeShoppers
                     * @param mergeShoppers682
                    
                     * @param authenticationResult683
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse mergeShoppers(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers mergeShoppers682,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult683)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/MergeShoppers");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeShoppers682,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeShoppers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeShoppers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult683!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult683 = toOM(authenticationResult683, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeShoppers")));
                                                    addHeader(omElementauthenticationResult683,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startmergeShoppers
                    * @param mergeShoppers682
                
                    * @param authenticationResult683
                
                */
                public  void startmergeShoppers(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers mergeShoppers682,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult683,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/MergeShoppers");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeShoppers682,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeShoppers")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeShoppers"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult683!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult683 = toOM(authenticationResult683, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeShoppers")));
                                                    addHeader(omElementauthenticationResult683,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultmergeShoppers(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrormergeShoppers(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeShoppers"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrormergeShoppers(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeShoppers(f);
                                            }
									    } else {
										    callback.receiveErrormergeShoppers(f);
									    }
									} else {
									    callback.receiveErrormergeShoppers(f);
									}
								} else {
								    callback.receiveErrormergeShoppers(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrormergeShoppers(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[77].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[77].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTransactionsByDate
                     * @param getTransactionsByDate685
                    
                     * @param authenticationResult686
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse getTransactionsByDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate getTransactionsByDate685,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult686)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactionsByDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactionsByDate685,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsByDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult686!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult686 = toOM(authenticationResult686, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsByDate")));
                                                    addHeader(omElementauthenticationResult686,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTransactionsByDate
                    * @param getTransactionsByDate685
                
                    * @param authenticationResult686
                
                */
                public  void startgetTransactionsByDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate getTransactionsByDate685,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult686,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactionsByDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactionsByDate685,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactionsByDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult686!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult686 = toOM(authenticationResult686, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactionsByDate")));
                                                    addHeader(omElementauthenticationResult686,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTransactionsByDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTransactionsByDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactionsByDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTransactionsByDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactionsByDate(f);
                                            }
									    } else {
										    callback.receiveErrorgetTransactionsByDate(f);
									    }
									} else {
									    callback.receiveErrorgetTransactionsByDate(f);
									}
								} else {
								    callback.receiveErrorgetTransactionsByDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTransactionsByDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[78].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[78].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#sendCommunicationToEmailAddresses
                     * @param sendCommunicationToEmailAddresses688
                    
                     * @param authenticationResult689
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse sendCommunicationToEmailAddresses(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses sendCommunicationToEmailAddresses688,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult689)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToEmailAddresses");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToEmailAddresses688,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddresses")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddresses"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult689!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult689 = toOM(authenticationResult689, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddresses")));
                                                    addHeader(omElementauthenticationResult689,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startsendCommunicationToEmailAddresses
                    * @param sendCommunicationToEmailAddresses688
                
                    * @param authenticationResult689
                
                */
                public  void startsendCommunicationToEmailAddresses(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses sendCommunicationToEmailAddresses688,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult689,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/SendCommunicationToEmailAddresses");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendCommunicationToEmailAddresses688,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddresses")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "sendCommunicationToEmailAddresses"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult689!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult689 = toOM(authenticationResult689, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "sendCommunicationToEmailAddresses")));
                                                    addHeader(omElementauthenticationResult689,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendCommunicationToEmailAddresses(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendCommunicationToEmailAddresses(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendCommunicationToEmailAddresses"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorsendCommunicationToEmailAddresses(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendCommunicationToEmailAddresses(f);
                                            }
									    } else {
										    callback.receiveErrorsendCommunicationToEmailAddresses(f);
									    }
									} else {
									    callback.receiveErrorsendCommunicationToEmailAddresses(f);
									}
								} else {
								    callback.receiveErrorsendCommunicationToEmailAddresses(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendCommunicationToEmailAddresses(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[79].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[79].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#mergeAccounts
                     * @param mergeAccounts691
                    
                     * @param authenticationResult692
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse mergeAccounts(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts mergeAccounts691,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult692)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/MergeAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeAccounts691,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeAccounts")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult692!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult692 = toOM(authenticationResult692, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeAccounts")));
                                                    addHeader(omElementauthenticationResult692,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startmergeAccounts
                    * @param mergeAccounts691
                
                    * @param authenticationResult692
                
                */
                public  void startmergeAccounts(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts mergeAccounts691,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult692,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/MergeAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeAccounts691,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeAccounts")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "mergeAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult692!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult692 = toOM(authenticationResult692, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "mergeAccounts")));
                                                    addHeader(omElementauthenticationResult692,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultmergeAccounts(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrormergeAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MergeAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrormergeAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormergeAccounts(f);
                                            }
									    } else {
										    callback.receiveErrormergeAccounts(f);
									    }
									} else {
									    callback.receiveErrormergeAccounts(f);
									}
								} else {
								    callback.receiveErrormergeAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrormergeAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[80].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[80].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createRewardRedemptionByPointGroup
                     * @param createRewardRedemptionByPointGroup694
                    
                     * @param authenticationResult695
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse createRewardRedemptionByPointGroup(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup createRewardRedemptionByPointGroup694,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult695)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemptionByPointGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemptionByPointGroup694,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult695!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult695 = toOM(authenticationResult695, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroup")));
                                                    addHeader(omElementauthenticationResult695,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateRewardRedemptionByPointGroup
                    * @param createRewardRedemptionByPointGroup694
                
                    * @param authenticationResult695
                
                */
                public  void startcreateRewardRedemptionByPointGroup(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup createRewardRedemptionByPointGroup694,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult695,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemptionByPointGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemptionByPointGroup694,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroup")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult695!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult695 = toOM(authenticationResult695, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroup")));
                                                    addHeader(omElementauthenticationResult695,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateRewardRedemptionByPointGroup(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateRewardRedemptionByPointGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateRewardRedemptionByPointGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
                                            }
									    } else {
										    callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
									    }
									} else {
									    callback.receiveErrorcreateRewardRedemptionByPointGroup(f);
									}
								} else {
								    callback.receiveErrorcreateRewardRedemptionByPointGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateRewardRedemptionByPointGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[81].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[81].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShoppersByRegisteredCard
                     * @param getShoppersByRegisteredCard697
                    
                     * @param authenticationResult698
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse getShoppersByRegisteredCard(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard getShoppersByRegisteredCard697,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult698)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByRegisteredCard");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByRegisteredCard697,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByRegisteredCard"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult698!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult698 = toOM(authenticationResult698, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByRegisteredCard")));
                                                    addHeader(omElementauthenticationResult698,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShoppersByRegisteredCard
                    * @param getShoppersByRegisteredCard697
                
                    * @param authenticationResult698
                
                */
                public  void startgetShoppersByRegisteredCard(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard getShoppersByRegisteredCard697,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult698,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShoppersByRegisteredCard");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShoppersByRegisteredCard697,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShoppersByRegisteredCard"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult698!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult698 = toOM(authenticationResult698, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShoppersByRegisteredCard")));
                                                    addHeader(omElementauthenticationResult698,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShoppersByRegisteredCard(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShoppersByRegisteredCard(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShoppersByRegisteredCard"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShoppersByRegisteredCard(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShoppersByRegisteredCard(f);
                                            }
									    } else {
										    callback.receiveErrorgetShoppersByRegisteredCard(f);
									    }
									} else {
									    callback.receiveErrorgetShoppersByRegisteredCard(f);
									}
								} else {
								    callback.receiveErrorgetShoppersByRegisteredCard(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShoppersByRegisteredCard(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[82].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[82].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperRegisteredCards
                     * @param getShopperRegisteredCards700
                    
                     * @param authenticationResult701
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse getShopperRegisteredCards(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards getShopperRegisteredCards700,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult701)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRegisteredCards");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRegisteredCards700,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRegisteredCards")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRegisteredCards"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult701!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult701 = toOM(authenticationResult701, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRegisteredCards")));
                                                    addHeader(omElementauthenticationResult701,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperRegisteredCards
                    * @param getShopperRegisteredCards700
                
                    * @param authenticationResult701
                
                */
                public  void startgetShopperRegisteredCards(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards getShopperRegisteredCards700,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult701,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRegisteredCards");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRegisteredCards700,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRegisteredCards")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRegisteredCards"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult701!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult701 = toOM(authenticationResult701, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRegisteredCards")));
                                                    addHeader(omElementauthenticationResult701,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperRegisteredCards(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperRegisteredCards(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRegisteredCards"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperRegisteredCards(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRegisteredCards(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperRegisteredCards(f);
									    }
									} else {
									    callback.receiveErrorgetShopperRegisteredCards(f);
									}
								} else {
								    callback.receiveErrorgetShopperRegisteredCards(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperRegisteredCards(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[83].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[83].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateCustomQuestionForShopper
                     * @param updateCustomQuestionForShopper703
                    
                     * @param authenticationResult704
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse updateCustomQuestionForShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper updateCustomQuestionForShopper703,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult704)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomQuestionForShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomQuestionForShopper703,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomQuestionForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomQuestionForShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult704!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult704 = toOM(authenticationResult704, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomQuestionForShopper")));
                                                    addHeader(omElementauthenticationResult704,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateCustomQuestionForShopper
                    * @param updateCustomQuestionForShopper703
                
                    * @param authenticationResult704
                
                */
                public  void startupdateCustomQuestionForShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper updateCustomQuestionForShopper703,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult704,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomQuestionForShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomQuestionForShopper703,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomQuestionForShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomQuestionForShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult704!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult704 = toOM(authenticationResult704, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomQuestionForShopper")));
                                                    addHeader(omElementauthenticationResult704,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCustomQuestionForShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCustomQuestionForShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomQuestionForShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateCustomQuestionForShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomQuestionForShopper(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCustomQuestionForShopper(f);
									    }
									} else {
									    callback.receiveErrorupdateCustomQuestionForShopper(f);
									}
								} else {
								    callback.receiveErrorupdateCustomQuestionForShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCustomQuestionForShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[84].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[84].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getCustomEntitiesByReferenceTag
                     * @param getCustomEntitiesByReferenceTag706
                    
                     * @param authenticationResult707
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse getCustomEntitiesByReferenceTag(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag getCustomEntitiesByReferenceTag706,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult707)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomEntitiesByReferenceTag");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomEntitiesByReferenceTag706,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomEntitiesByReferenceTag")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomEntitiesByReferenceTag"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult707!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult707 = toOM(authenticationResult707, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomEntitiesByReferenceTag")));
                                                    addHeader(omElementauthenticationResult707,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetCustomEntitiesByReferenceTag
                    * @param getCustomEntitiesByReferenceTag706
                
                    * @param authenticationResult707
                
                */
                public  void startgetCustomEntitiesByReferenceTag(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag getCustomEntitiesByReferenceTag706,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult707,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetCustomEntitiesByReferenceTag");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomEntitiesByReferenceTag706,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomEntitiesByReferenceTag")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getCustomEntitiesByReferenceTag"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult707!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult707 = toOM(authenticationResult707, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getCustomEntitiesByReferenceTag")));
                                                    addHeader(omElementauthenticationResult707,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomEntitiesByReferenceTag(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomEntitiesByReferenceTag(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomEntitiesByReferenceTag"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCustomEntitiesByReferenceTag(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
									    }
									} else {
									    callback.receiveErrorgetCustomEntitiesByReferenceTag(f);
									}
								} else {
								    callback.receiveErrorgetCustomEntitiesByReferenceTag(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomEntitiesByReferenceTag(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[85].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[85].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalanceByDate
                     * @param getShopperPointBalanceByDate709
                    
                     * @param authenticationResult710
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse getShopperPointBalanceByDate(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate getShopperPointBalanceByDate709,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult710)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByDate");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByDate709,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByDate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult710!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult710 = toOM(authenticationResult710, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByDate")));
                                                    addHeader(omElementauthenticationResult710,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalanceByDate
                    * @param getShopperPointBalanceByDate709
                
                    * @param authenticationResult710
                
                */
                public  void startgetShopperPointBalanceByDate(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate getShopperPointBalanceByDate709,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult710,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByDate");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByDate709,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByDate")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByDate"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult710!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult710 = toOM(authenticationResult710, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByDate")));
                                                    addHeader(omElementauthenticationResult710,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalanceByDate(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalanceByDate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByDate"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalanceByDate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByDate(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalanceByDate(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalanceByDate(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalanceByDate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalanceByDate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[86].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[86].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getRegisteredCard
                     * @param getRegisteredCard712
                    
                     * @param authenticationResult713
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse getRegisteredCard(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard getRegisteredCard712,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult713)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRegisteredCard");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRegisteredCard712,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRegisteredCard"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult713!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult713 = toOM(authenticationResult713, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRegisteredCard")));
                                                    addHeader(omElementauthenticationResult713,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetRegisteredCard
                    * @param getRegisteredCard712
                
                    * @param authenticationResult713
                
                */
                public  void startgetRegisteredCard(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard getRegisteredCard712,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult713,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetRegisteredCard");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRegisteredCard712,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getRegisteredCard"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult713!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult713 = toOM(authenticationResult713, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getRegisteredCard")));
                                                    addHeader(omElementauthenticationResult713,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRegisteredCard(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRegisteredCard(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRegisteredCard"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRegisteredCard(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRegisteredCard(f);
                                            }
									    } else {
										    callback.receiveErrorgetRegisteredCard(f);
									    }
									} else {
									    callback.receiveErrorgetRegisteredCard(f);
									}
								} else {
								    callback.receiveErrorgetRegisteredCard(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRegisteredCard(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[87].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[87].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createUnregisteredShopper
                     * @param createUnregisteredShopper715
                    
                     * @param authenticationResult716
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse createUnregisteredShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper createUnregisteredShopper715,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult716)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[88].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateUnregisteredShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createUnregisteredShopper715,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createUnregisteredShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createUnregisteredShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult716!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult716 = toOM(authenticationResult716, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createUnregisteredShopper")));
                                                    addHeader(omElementauthenticationResult716,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateUnregisteredShopper
                    * @param createUnregisteredShopper715
                
                    * @param authenticationResult716
                
                */
                public  void startcreateUnregisteredShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper createUnregisteredShopper715,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult716,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[88].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateUnregisteredShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createUnregisteredShopper715,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createUnregisteredShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createUnregisteredShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult716!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult716 = toOM(authenticationResult716, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createUnregisteredShopper")));
                                                    addHeader(omElementauthenticationResult716,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateUnregisteredShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateUnregisteredShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateUnregisteredShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateUnregisteredShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateUnregisteredShopper(f);
                                            }
									    } else {
										    callback.receiveErrorcreateUnregisteredShopper(f);
									    }
									} else {
									    callback.receiveErrorcreateUnregisteredShopper(f);
									}
								} else {
								    callback.receiveErrorcreateUnregisteredShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateUnregisteredShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[88].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[88].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTransactions
                     * @param getTransactions718
                    
                     * @param authenticationResult719
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse getTransactions(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions getTransactions718,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult719)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[89].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactions718,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult719!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult719 = toOM(authenticationResult719, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactions")));
                                                    addHeader(omElementauthenticationResult719,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTransactions
                    * @param getTransactions718
                
                    * @param authenticationResult719
                
                */
                public  void startgetTransactions(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions getTransactions718,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult719,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[89].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTransactions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTransactions718,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTransactions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult719!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult719 = toOM(authenticationResult719, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTransactions")));
                                                    addHeader(omElementauthenticationResult719,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTransactions(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTransactions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTransactions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTransactions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTransactions(f);
                                            }
									    } else {
										    callback.receiveErrorgetTransactions(f);
									    }
									} else {
									    callback.receiveErrorgetTransactions(f);
									}
								} else {
								    callback.receiveErrorgetTransactions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTransactions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[89].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[89].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createShopperWithCard
                     * @param createShopperWithCard721
                    
                     * @param authenticationResult722
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse createShopperWithCard(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard createShopperWithCard721,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult722)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[90].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateShopperWithCard");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createShopperWithCard721,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopperWithCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopperWithCard"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult722!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult722 = toOM(authenticationResult722, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopperWithCard")));
                                                    addHeader(omElementauthenticationResult722,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateShopperWithCard
                    * @param createShopperWithCard721
                
                    * @param authenticationResult722
                
                */
                public  void startcreateShopperWithCard(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard createShopperWithCard721,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult722,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[90].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateShopperWithCard");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createShopperWithCard721,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopperWithCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopperWithCard"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult722!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult722 = toOM(authenticationResult722, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopperWithCard")));
                                                    addHeader(omElementauthenticationResult722,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateShopperWithCard(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateShopperWithCard(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopperWithCard"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateShopperWithCard(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopperWithCard(f);
                                            }
									    } else {
										    callback.receiveErrorcreateShopperWithCard(f);
									    }
									} else {
									    callback.receiveErrorcreateShopperWithCard(f);
									}
								} else {
								    callback.receiveErrorcreateShopperWithCard(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateShopperWithCard(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[90].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[90].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#removeRewardProductFromCatalog
                     * @param removeRewardProductFromCatalog724
                    
                     * @param authenticationResult725
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse removeRewardProductFromCatalog(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog removeRewardProductFromCatalog724,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult725)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[91].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RemoveRewardProductFromCatalog");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    removeRewardProductFromCatalog724,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "removeRewardProductFromCatalog")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "removeRewardProductFromCatalog"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult725!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult725 = toOM(authenticationResult725, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "removeRewardProductFromCatalog")));
                                                    addHeader(omElementauthenticationResult725,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startremoveRewardProductFromCatalog
                    * @param removeRewardProductFromCatalog724
                
                    * @param authenticationResult725
                
                */
                public  void startremoveRewardProductFromCatalog(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog removeRewardProductFromCatalog724,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult725,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[91].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/RemoveRewardProductFromCatalog");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    removeRewardProductFromCatalog724,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "removeRewardProductFromCatalog")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "removeRewardProductFromCatalog"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult725!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult725 = toOM(authenticationResult725, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "removeRewardProductFromCatalog")));
                                                    addHeader(omElementauthenticationResult725,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultremoveRewardProductFromCatalog(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorremoveRewardProductFromCatalog(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"RemoveRewardProductFromCatalog"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorremoveRewardProductFromCatalog(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorremoveRewardProductFromCatalog(f);
                                            }
									    } else {
										    callback.receiveErrorremoveRewardProductFromCatalog(f);
									    }
									} else {
									    callback.receiveErrorremoveRewardProductFromCatalog(f);
									}
								} else {
								    callback.receiveErrorremoveRewardProductFromCatalog(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorremoveRewardProductFromCatalog(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[91].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[91].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#reversePurchaseAwardForReturns
                     * @param reversePurchaseAwardForReturns727
                    
                     * @param authenticationResult728
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse reversePurchaseAwardForReturns(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns reversePurchaseAwardForReturns727,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult728)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[92].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ReversePurchaseAwardForReturns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    reversePurchaseAwardForReturns727,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "reversePurchaseAwardForReturns")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "reversePurchaseAwardForReturns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult728!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult728 = toOM(authenticationResult728, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "reversePurchaseAwardForReturns")));
                                                    addHeader(omElementauthenticationResult728,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startreversePurchaseAwardForReturns
                    * @param reversePurchaseAwardForReturns727
                
                    * @param authenticationResult728
                
                */
                public  void startreversePurchaseAwardForReturns(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns reversePurchaseAwardForReturns727,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult728,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[92].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ReversePurchaseAwardForReturns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    reversePurchaseAwardForReturns727,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "reversePurchaseAwardForReturns")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "reversePurchaseAwardForReturns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult728!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult728 = toOM(authenticationResult728, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "reversePurchaseAwardForReturns")));
                                                    addHeader(omElementauthenticationResult728,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultreversePurchaseAwardForReturns(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorreversePurchaseAwardForReturns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ReversePurchaseAwardForReturns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorreversePurchaseAwardForReturns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorreversePurchaseAwardForReturns(f);
                                            }
									    } else {
										    callback.receiveErrorreversePurchaseAwardForReturns(f);
									    }
									} else {
									    callback.receiveErrorreversePurchaseAwardForReturns(f);
									}
								} else {
								    callback.receiveErrorreversePurchaseAwardForReturns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorreversePurchaseAwardForReturns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[92].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[92].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalanceByPointState
                     * @param getShopperPointBalanceByPointState730
                    
                     * @param authenticationResult731
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse getShopperPointBalanceByPointState(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState getShopperPointBalanceByPointState730,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult731)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[93].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByPointState");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByPointState730,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointState")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointState"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult731!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult731 = toOM(authenticationResult731, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointState")));
                                                    addHeader(omElementauthenticationResult731,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalanceByPointState
                    * @param getShopperPointBalanceByPointState730
                
                    * @param authenticationResult731
                
                */
                public  void startgetShopperPointBalanceByPointState(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState getShopperPointBalanceByPointState730,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult731,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[93].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByPointState");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByPointState730,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointState")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByPointState"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult731!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult731 = toOM(authenticationResult731, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByPointState")));
                                                    addHeader(omElementauthenticationResult731,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalanceByPointState(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalanceByPointState(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByPointState"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalanceByPointState(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByPointState(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalanceByPointState(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalanceByPointState(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalanceByPointState(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalanceByPointState(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[93].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[93].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#changePointStateByExternalId
                     * @param changePointStateByExternalId733
                    
                     * @param authenticationResult734
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse changePointStateByExternalId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId changePointStateByExternalId733,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult734)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[94].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ChangePointStateByExternalId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changePointStateByExternalId733,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByExternalId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByExternalId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult734!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult734 = toOM(authenticationResult734, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByExternalId")));
                                                    addHeader(omElementauthenticationResult734,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startchangePointStateByExternalId
                    * @param changePointStateByExternalId733
                
                    * @param authenticationResult734
                
                */
                public  void startchangePointStateByExternalId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId changePointStateByExternalId733,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult734,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[94].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ChangePointStateByExternalId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changePointStateByExternalId733,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByExternalId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "changePointStateByExternalId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult734!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult734 = toOM(authenticationResult734, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "changePointStateByExternalId")));
                                                    addHeader(omElementauthenticationResult734,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultchangePointStateByExternalId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorchangePointStateByExternalId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ChangePointStateByExternalId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorchangePointStateByExternalId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorchangePointStateByExternalId(f);
                                            }
									    } else {
										    callback.receiveErrorchangePointStateByExternalId(f);
									    }
									} else {
									    callback.receiveErrorchangePointStateByExternalId(f);
									}
								} else {
								    callback.receiveErrorchangePointStateByExternalId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorchangePointStateByExternalId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[94].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[94].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByRegisteredCard
                     * @param getShopperByRegisteredCard736
                    
                     * @param authenticationResult737
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse getShopperByRegisteredCard(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard getShopperByRegisteredCard736,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult737)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[95].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByRegisteredCard");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByRegisteredCard736,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRegisteredCard"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult737!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult737 = toOM(authenticationResult737, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRegisteredCard")));
                                                    addHeader(omElementauthenticationResult737,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByRegisteredCard
                    * @param getShopperByRegisteredCard736
                
                    * @param authenticationResult737
                
                */
                public  void startgetShopperByRegisteredCard(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard getShopperByRegisteredCard736,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult737,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[95].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByRegisteredCard");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByRegisteredCard736,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRegisteredCard")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByRegisteredCard"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult737!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult737 = toOM(authenticationResult737, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByRegisteredCard")));
                                                    addHeader(omElementauthenticationResult737,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByRegisteredCard(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByRegisteredCard(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByRegisteredCard"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByRegisteredCard(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByRegisteredCard(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByRegisteredCard(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByRegisteredCard(f);
									}
								} else {
								    callback.receiveErrorgetShopperByRegisteredCard(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByRegisteredCard(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[95].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[95].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByEmail
                     * @param getShopperByEmail739
                    
                     * @param authenticationResult740
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse getShopperByEmail(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail getShopperByEmail739,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult740)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[96].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByEmail");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByEmail739,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByEmail")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByEmail"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult740!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult740 = toOM(authenticationResult740, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByEmail")));
                                                    addHeader(omElementauthenticationResult740,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByEmail
                    * @param getShopperByEmail739
                
                    * @param authenticationResult740
                
                */
                public  void startgetShopperByEmail(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail getShopperByEmail739,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult740,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[96].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByEmail");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByEmail739,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByEmail")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByEmail"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult740!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult740 = toOM(authenticationResult740, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByEmail")));
                                                    addHeader(omElementauthenticationResult740,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByEmail(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByEmail(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByEmail"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByEmail(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByEmail(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByEmail(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByEmail(f);
									}
								} else {
								    callback.receiveErrorgetShopperByEmail(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByEmail(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[96].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[96].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperByID
                     * @param getShopperByID742
                    
                     * @param authenticationResult743
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse getShopperByID(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID getShopperByID742,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult743)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[97].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByID");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByID742,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult743!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult743 = toOM(authenticationResult743, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByID")));
                                                    addHeader(omElementauthenticationResult743,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperByID
                    * @param getShopperByID742
                
                    * @param authenticationResult743
                
                */
                public  void startgetShopperByID(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID getShopperByID742,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult743,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[97].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperByID");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperByID742,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperByID"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult743!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult743 = toOM(authenticationResult743, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperByID")));
                                                    addHeader(omElementauthenticationResult743,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperByID(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperByID(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperByID"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperByID(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperByID(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperByID(f);
									    }
									} else {
									    callback.receiveErrorgetShopperByID(f);
									}
								} else {
								    callback.receiveErrorgetShopperByID(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperByID(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[97].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[97].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the loyalty program's card number.
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getTotalPointsEarnedByLoyaltyCardNumber
                     * @param getTotalPointsEarnedByLoyaltyCardNumber745
                    
                     * @param authenticationResult746
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse getTotalPointsEarnedByLoyaltyCardNumber(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber getTotalPointsEarnedByLoyaltyCardNumber745,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult746)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[98].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByLoyaltyCardNumber");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByLoyaltyCardNumber745,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByLoyaltyCardNumber")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByLoyaltyCardNumber"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult746!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult746 = toOM(authenticationResult746, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByLoyaltyCardNumber")));
                                                    addHeader(omElementauthenticationResult746,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * Returns the total number of points earned by a shopper in a given time frame, the shopper being identified by the loyalty program's card number.
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetTotalPointsEarnedByLoyaltyCardNumber
                    * @param getTotalPointsEarnedByLoyaltyCardNumber745
                
                    * @param authenticationResult746
                
                */
                public  void startgetTotalPointsEarnedByLoyaltyCardNumber(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber getTotalPointsEarnedByLoyaltyCardNumber745,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult746,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[98].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetTotalPointsEarnedByLoyaltyCardNumber");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTotalPointsEarnedByLoyaltyCardNumber745,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByLoyaltyCardNumber")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getTotalPointsEarnedByLoyaltyCardNumber"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult746!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult746 = toOM(authenticationResult746, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getTotalPointsEarnedByLoyaltyCardNumber")));
                                                    addHeader(omElementauthenticationResult746,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTotalPointsEarnedByLoyaltyCardNumber(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTotalPointsEarnedByLoyaltyCardNumber"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
                                            }
									    } else {
										    callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
									    }
									} else {
									    callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(f);
									}
								} else {
								    callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTotalPointsEarnedByLoyaltyCardNumber(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[98].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[98].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#authenticateUser
                     * @param authenticateUser748
                    
                     * @param authenticationResult749
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse authenticateUser(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser authenticateUser748,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult749)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[99].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AuthenticateUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    authenticateUser748,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "authenticateUser")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "authenticateUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult749!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult749 = toOM(authenticationResult749, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "authenticateUser")));
                                                    addHeader(omElementauthenticationResult749,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startauthenticateUser
                    * @param authenticateUser748
                
                    * @param authenticationResult749
                
                */
                public  void startauthenticateUser(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser authenticateUser748,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult749,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[99].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AuthenticateUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    authenticateUser748,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "authenticateUser")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "authenticateUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult749!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult749 = toOM(authenticationResult749, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "authenticateUser")));
                                                    addHeader(omElementauthenticationResult749,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultauthenticateUser(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorauthenticateUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AuthenticateUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorauthenticateUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorauthenticateUser(f);
                                            }
									    } else {
										    callback.receiveErrorauthenticateUser(f);
									    }
									} else {
									    callback.receiveErrorauthenticateUser(f);
									}
								} else {
								    callback.receiveErrorauthenticateUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorauthenticateUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[99].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[99].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateCustomEntity
                     * @param updateCustomEntity751
                    
                     * @param authenticationResult752
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse updateCustomEntity(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity updateCustomEntity751,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult752)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[100].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomEntity");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomEntity751,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomEntity"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult752!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult752 = toOM(authenticationResult752, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomEntity")));
                                                    addHeader(omElementauthenticationResult752,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateCustomEntity
                    * @param updateCustomEntity751
                
                    * @param authenticationResult752
                
                */
                public  void startupdateCustomEntity(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity updateCustomEntity751,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult752,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[100].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomEntity");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomEntity751,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomEntity")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomEntity"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult752!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult752 = toOM(authenticationResult752, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomEntity")));
                                                    addHeader(omElementauthenticationResult752,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCustomEntity(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCustomEntity(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomEntity"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateCustomEntity(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomEntity(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCustomEntity(f);
									    }
									} else {
									    callback.receiveErrorupdateCustomEntity(f);
									}
								} else {
								    callback.receiveErrorupdateCustomEntity(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCustomEntity(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[100].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[100].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createRewardRedemptionByPointGroupAndCustomAttributes
                     * @param createRewardRedemptionByPointGroupAndCustomAttributes754
                    
                     * @param authenticationResult755
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse createRewardRedemptionByPointGroupAndCustomAttributes(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes createRewardRedemptionByPointGroupAndCustomAttributes754,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult755)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[101].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemptionByPointGroupAndCustomAttributes");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemptionByPointGroupAndCustomAttributes754,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroupAndCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroupAndCustomAttributes"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult755!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult755 = toOM(authenticationResult755, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroupAndCustomAttributes")));
                                                    addHeader(omElementauthenticationResult755,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateRewardRedemptionByPointGroupAndCustomAttributes
                    * @param createRewardRedemptionByPointGroupAndCustomAttributes754
                
                    * @param authenticationResult755
                
                */
                public  void startcreateRewardRedemptionByPointGroupAndCustomAttributes(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes createRewardRedemptionByPointGroupAndCustomAttributes754,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult755,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[101].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemptionByPointGroupAndCustomAttributes");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemptionByPointGroupAndCustomAttributes754,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroupAndCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemptionByPointGroupAndCustomAttributes"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult755!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult755 = toOM(authenticationResult755, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemptionByPointGroupAndCustomAttributes")));
                                                    addHeader(omElementauthenticationResult755,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateRewardRedemptionByPointGroupAndCustomAttributes(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemptionByPointGroupAndCustomAttributes"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
                                            }
									    } else {
										    callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
									    }
									} else {
									    callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(f);
									}
								} else {
								    callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateRewardRedemptionByPointGroupAndCustomAttributes(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[101].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[101].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPrograms
                     * @param getShopperPrograms757
                    
                     * @param authenticationResult758
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse getShopperPrograms(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms getShopperPrograms757,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult758)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[102].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPrograms");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPrograms757,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPrograms")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPrograms"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult758!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult758 = toOM(authenticationResult758, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPrograms")));
                                                    addHeader(omElementauthenticationResult758,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPrograms
                    * @param getShopperPrograms757
                
                    * @param authenticationResult758
                
                */
                public  void startgetShopperPrograms(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms getShopperPrograms757,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult758,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[102].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPrograms");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPrograms757,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPrograms")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPrograms"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult758!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult758 = toOM(authenticationResult758, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPrograms")));
                                                    addHeader(omElementauthenticationResult758,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPrograms(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPrograms(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPrograms"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPrograms(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPrograms(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPrograms(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPrograms(f);
									}
								} else {
								    callback.receiveErrorgetShopperPrograms(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPrograms(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[102].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[102].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperOffersExtended
                     * @param getShopperOffersExtended760
                    
                     * @param authenticationResult761
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse getShopperOffersExtended(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended getShopperOffersExtended760,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult761)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[103].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperOffersExtended");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperOffersExtended760,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffersExtended")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffersExtended"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult761!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult761 = toOM(authenticationResult761, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffersExtended")));
                                                    addHeader(omElementauthenticationResult761,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperOffersExtended
                    * @param getShopperOffersExtended760
                
                    * @param authenticationResult761
                
                */
                public  void startgetShopperOffersExtended(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended getShopperOffersExtended760,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult761,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[103].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperOffersExtended");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperOffersExtended760,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffersExtended")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperOffersExtended"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult761!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult761 = toOM(authenticationResult761, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperOffersExtended")));
                                                    addHeader(omElementauthenticationResult761,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperOffersExtended(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperOffersExtended(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperOffersExtended"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperOffersExtended(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperOffersExtended(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperOffersExtended(f);
									    }
									} else {
									    callback.receiveErrorgetShopperOffersExtended(f);
									}
								} else {
								    callback.receiveErrorgetShopperOffersExtended(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperOffersExtended(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[103].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[103].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperPointBalanceByRetailerID
                     * @param getShopperPointBalanceByRetailerID763
                    
                     * @param authenticationResult764
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse getShopperPointBalanceByRetailerID(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID getShopperPointBalanceByRetailerID763,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult764)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[104].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByRetailerID");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByRetailerID763,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByRetailerID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult764!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult764 = toOM(authenticationResult764, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByRetailerID")));
                                                    addHeader(omElementauthenticationResult764,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperPointBalanceByRetailerID
                    * @param getShopperPointBalanceByRetailerID763
                
                    * @param authenticationResult764
                
                */
                public  void startgetShopperPointBalanceByRetailerID(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID getShopperPointBalanceByRetailerID763,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult764,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[104].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperPointBalanceByRetailerID");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperPointBalanceByRetailerID763,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByRetailerID")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperPointBalanceByRetailerID"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult764!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult764 = toOM(authenticationResult764, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperPointBalanceByRetailerID")));
                                                    addHeader(omElementauthenticationResult764,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperPointBalanceByRetailerID(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperPointBalanceByRetailerID(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperPointBalanceByRetailerID"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperPointBalanceByRetailerID(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
									    }
									} else {
									    callback.receiveErrorgetShopperPointBalanceByRetailerID(f);
									}
								} else {
								    callback.receiveErrorgetShopperPointBalanceByRetailerID(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperPointBalanceByRetailerID(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[104].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[104].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateShopperOfferStatus
                     * @param updateShopperOfferStatus766
                    
                     * @param authenticationResult767
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse updateShopperOfferStatus(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus updateShopperOfferStatus766,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult767)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[105].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopperOfferStatus");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopperOfferStatus766,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperOfferStatus")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperOfferStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult767!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult767 = toOM(authenticationResult767, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperOfferStatus")));
                                                    addHeader(omElementauthenticationResult767,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateShopperOfferStatus
                    * @param updateShopperOfferStatus766
                
                    * @param authenticationResult767
                
                */
                public  void startupdateShopperOfferStatus(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus updateShopperOfferStatus766,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult767,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[105].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopperOfferStatus");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopperOfferStatus766,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperOfferStatus")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperOfferStatus"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult767!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult767 = toOM(authenticationResult767, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperOfferStatus")));
                                                    addHeader(omElementauthenticationResult767,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateShopperOfferStatus(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateShopperOfferStatus(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperOfferStatus"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateShopperOfferStatus(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperOfferStatus(f);
                                            }
									    } else {
										    callback.receiveErrorupdateShopperOfferStatus(f);
									    }
									} else {
									    callback.receiveErrorupdateShopperOfferStatus(f);
									}
								} else {
								    callback.receiveErrorupdateShopperOfferStatus(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateShopperOfferStatus(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[105].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[105].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createRewardRedemption
                     * @param createRewardRedemption769
                    
                     * @param authenticationResult770
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse createRewardRedemption(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption createRewardRedemption769,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult770)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[106].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemption");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemption769,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemption")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemption"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult770!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult770 = toOM(authenticationResult770, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemption")));
                                                    addHeader(omElementauthenticationResult770,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateRewardRedemption
                    * @param createRewardRedemption769
                
                    * @param authenticationResult770
                
                */
                public  void startcreateRewardRedemption(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption createRewardRedemption769,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult770,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[106].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateRewardRedemption");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createRewardRedemption769,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemption")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createRewardRedemption"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult770!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult770 = toOM(authenticationResult770, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createRewardRedemption")));
                                                    addHeader(omElementauthenticationResult770,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateRewardRedemption(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateRewardRedemption(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateRewardRedemption"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateRewardRedemption(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateRewardRedemption(f);
                                            }
									    } else {
										    callback.receiveErrorcreateRewardRedemption(f);
									    }
									} else {
									    callback.receiveErrorcreateRewardRedemption(f);
									}
								} else {
								    callback.receiveErrorcreateRewardRedemption(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateRewardRedemption(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[106].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[106].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#adjustShopperPointsWithExpirationDateCustomAttributes
                     * @param adjustShopperPointsWithExpirationDateCustomAttributes772
                    
                     * @param authenticationResult773
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse adjustShopperPointsWithExpirationDateCustomAttributes(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes adjustShopperPointsWithExpirationDateCustomAttributes772,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult773)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[107].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithExpirationDateCustomAttributes");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithExpirationDateCustomAttributes772,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDateCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDateCustomAttributes"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult773!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult773 = toOM(authenticationResult773, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDateCustomAttributes")));
                                                    addHeader(omElementauthenticationResult773,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startadjustShopperPointsWithExpirationDateCustomAttributes
                    * @param adjustShopperPointsWithExpirationDateCustomAttributes772
                
                    * @param authenticationResult773
                
                */
                public  void startadjustShopperPointsWithExpirationDateCustomAttributes(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes adjustShopperPointsWithExpirationDateCustomAttributes772,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult773,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[107].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/AdjustShopperPointsWithExpirationDateCustomAttributes");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    adjustShopperPointsWithExpirationDateCustomAttributes772,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDateCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "adjustShopperPointsWithExpirationDateCustomAttributes"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult773!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult773 = toOM(authenticationResult773, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "adjustShopperPointsWithExpirationDateCustomAttributes")));
                                                    addHeader(omElementauthenticationResult773,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultadjustShopperPointsWithExpirationDateCustomAttributes(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AdjustShopperPointsWithExpirationDateCustomAttributes"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
                                            }
									    } else {
										    callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
									    }
									} else {
									    callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(f);
									}
								} else {
								    callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroradjustShopperPointsWithExpirationDateCustomAttributes(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[107].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[107].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateShopperPointsBalanceWithCustomAttributes
                     * @param updateShopperPointsBalanceWithCustomAttributes775
                    
                     * @param authenticationResult776
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse updateShopperPointsBalanceWithCustomAttributes(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes updateShopperPointsBalanceWithCustomAttributes775,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult776)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[108].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopperPointsBalanceWithCustomAttributes");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopperPointsBalanceWithCustomAttributes775,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperPointsBalanceWithCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperPointsBalanceWithCustomAttributes"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult776!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult776 = toOM(authenticationResult776, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperPointsBalanceWithCustomAttributes")));
                                                    addHeader(omElementauthenticationResult776,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateShopperPointsBalanceWithCustomAttributes
                    * @param updateShopperPointsBalanceWithCustomAttributes775
                
                    * @param authenticationResult776
                
                */
                public  void startupdateShopperPointsBalanceWithCustomAttributes(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes updateShopperPointsBalanceWithCustomAttributes775,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult776,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[108].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateShopperPointsBalanceWithCustomAttributes");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateShopperPointsBalanceWithCustomAttributes775,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperPointsBalanceWithCustomAttributes")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateShopperPointsBalanceWithCustomAttributes"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult776!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult776 = toOM(authenticationResult776, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateShopperPointsBalanceWithCustomAttributes")));
                                                    addHeader(omElementauthenticationResult776,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateShopperPointsBalanceWithCustomAttributes(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateShopperPointsBalanceWithCustomAttributes"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
                                            }
									    } else {
										    callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
									    }
									} else {
									    callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(f);
									}
								} else {
								    callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateShopperPointsBalanceWithCustomAttributes(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[108].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[108].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#createShopper
                     * @param createShopper778
                    
                     * @param authenticationResult779
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse createShopper(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper createShopper778,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult779)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[109].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateShopper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createShopper778,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopper"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult779!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult779 = toOM(authenticationResult779, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopper")));
                                                    addHeader(omElementauthenticationResult779,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startcreateShopper
                    * @param createShopper778
                
                    * @param authenticationResult779
                
                */
                public  void startcreateShopper(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper createShopper778,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult779,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[109].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/CreateShopper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createShopper778,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopper")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "createShopper"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult779!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult779 = toOM(authenticationResult779, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "createShopper")));
                                                    addHeader(omElementauthenticationResult779,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcreateShopper(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcreateShopper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CreateShopper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorcreateShopper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcreateShopper(f);
                                            }
									    } else {
										    callback.receiveErrorcreateShopper(f);
									    }
									} else {
									    callback.receiveErrorcreateShopper(f);
									}
								} else {
								    callback.receiveErrorcreateShopper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcreateShopper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[109].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[109].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#getShopperRedemptionsByLoyaltyProgramId
                     * @param getShopperRedemptionsByLoyaltyProgramId781
                    
                     * @param authenticationResult782
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse getShopperRedemptionsByLoyaltyProgramId(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId getShopperRedemptionsByLoyaltyProgramId781,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult782)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[110].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByLoyaltyProgramId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByLoyaltyProgramId781,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByLoyaltyProgramId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByLoyaltyProgramId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult782!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult782 = toOM(authenticationResult782, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByLoyaltyProgramId")));
                                                    addHeader(omElementauthenticationResult782,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startgetShopperRedemptionsByLoyaltyProgramId
                    * @param getShopperRedemptionsByLoyaltyProgramId781
                
                    * @param authenticationResult782
                
                */
                public  void startgetShopperRedemptionsByLoyaltyProgramId(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId getShopperRedemptionsByLoyaltyProgramId781,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult782,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[110].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/GetShopperRedemptionsByLoyaltyProgramId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getShopperRedemptionsByLoyaltyProgramId781,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByLoyaltyProgramId")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "getShopperRedemptionsByLoyaltyProgramId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult782!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult782 = toOM(authenticationResult782, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "getShopperRedemptionsByLoyaltyProgramId")));
                                                    addHeader(omElementauthenticationResult782,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetShopperRedemptionsByLoyaltyProgramId(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetShopperRedemptionsByLoyaltyProgramId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
                                            }
									    } else {
										    callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
									    }
									} else {
									    callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(f);
									}
								} else {
								    callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetShopperRedemptionsByLoyaltyProgramId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[110].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[110].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#importTransactions
                     * @param importTransactions784
                    
                     * @param authenticationResult785
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse importTransactions(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions importTransactions784,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult785)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[111].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ImportTransactions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    importTransactions784,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransactions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransactions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult785!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult785 = toOM(authenticationResult785, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransactions")));
                                                    addHeader(omElementauthenticationResult785,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startimportTransactions
                    * @param importTransactions784
                
                    * @param authenticationResult785
                
                */
                public  void startimportTransactions(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions importTransactions784,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult785,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[111].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/ImportTransactions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    importTransactions784,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransactions")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "importTransactions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult785!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult785 = toOM(authenticationResult785, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "importTransactions")));
                                                    addHeader(omElementauthenticationResult785,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultimportTransactions(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorimportTransactions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ImportTransactions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorimportTransactions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorimportTransactions(f);
                                            }
									    } else {
										    callback.receiveErrorimportTransactions(f);
									    }
									} else {
									    callback.receiveErrorimportTransactions(f);
									}
								} else {
								    callback.receiveErrorimportTransactions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorimportTransactions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[111].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[111].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#updateCustomAttribute
                     * @param updateCustomAttribute787
                    
                     * @param authenticationResult788
                    
                     */

                    

                            public  com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse updateCustomAttribute(

                            com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute updateCustomAttribute787,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult788)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[112].getName());
              _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomAttribute");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomAttribute787,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttribute")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttribute"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authenticationResult788!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult788 = toOM(authenticationResult788, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttribute")));
                                                    addHeader(omElementauthenticationResult788,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPI#startupdateCustomAttribute
                    * @param updateCustomAttribute787
                
                    * @param authenticationResult788
                
                */
                public  void startupdateCustomAttribute(

                 com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute updateCustomAttribute787,com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE authenticationResult788,
                    

                  final com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.LoyaltyLabAPICallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[112].getName());
             _operationClient.getOptions().setAction("http://www.loyaltylab.com/loyaltyapi/UpdateCustomAttribute");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomAttribute787,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttribute")), new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/",
                                                    "updateCustomAttribute"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (authenticationResult788!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementauthenticationResult788 = toOM(authenticationResult788, optimizeContent(new javax.xml.namespace.QName("http://www.loyaltylab.com/loyaltyapi/", "updateCustomAttribute")));
                                                    addHeader(omElementauthenticationResult788,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCustomAttribute(
                                        (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCustomAttribute(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomAttribute"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdateCustomAttribute(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomAttribute(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCustomAttribute(f);
									    }
									} else {
									    callback.receiveErrorupdateCustomAttribute(f);
									}
								} else {
								    callback.receiveErrorupdateCustomAttribute(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCustomAttribute(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[112].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[112].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //https://api.loyaltylab.com/loyaltyapi/loyaltyapi.asmx
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShoppersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstance.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateEventInstanceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransaction.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddTransactionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ScoreShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragment.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberFragmentResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductById.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByShopperIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOffer.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemOfferResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewards.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrices.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPricesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCard.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRegisteredCardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsCustomAttributesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPrice.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCurrentPointPriceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntity.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectsFromSearchableCustomEntityResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierPrograms.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTierProgramsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByRetailerShopperIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntity.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferenceObjectFromUniqueCustomEntityResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenByRetailerIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomQuestionsForShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByEmailAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchase.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AssociatePurchaseResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfo.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperTransactionsWithCompleteProductInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogById.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogsByRewardProductIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgram.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToProgramResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetEventDefinitionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsOrderItemsByDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCSRAuthenticationTokenResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheck.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithRedemptionCustomAttributeCheckResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriend.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReferFriendResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceType.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByBalanceTypeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseWithPointGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalog.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddRewardProductToCatalogResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTier.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AddShopperToTierResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiring.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointsExpiringResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturns.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPurchaseAwardForReturnsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.EnrollShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPlcAvailablePointsByDateByPointGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProduct.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardProductResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStores.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetStoresResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemReward.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemRewardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateAndScoreShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRetailerIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPrices.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetPointPricesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransaction.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignIn.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ShopperSignInResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UnEnrollShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperAuthenticationTokenResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByUserNameResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProduct.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateRewardProductResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalance.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTenders.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsWithTendersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPoints.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumber.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByPhoneNumberResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProfilesByShopperIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByShopperIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesForShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchase.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.PointsPurchaseResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKU.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetProductBySKUResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriends.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetReferedFriendsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardCatalogByRetailerCatalogIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKU.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRewardProductByUniqueSKUResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RedeemShopperRewardCerificateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByLoyaltyLabIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCodesWithSkuForShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByMergedVictimIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeShoppersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsByDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddresses.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.SendCommunicationToEmailAddressesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccounts.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.MergeAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCard.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShoppersByRegisteredCardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCards.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRegisteredCardsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomQuestionForShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTag.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetCustomEntitiesByReferenceTagResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByDateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCard.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetRegisteredCardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateUnregisteredShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTransactionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCard.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperWithCardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalog.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.RemoveRewardProductFromCatalogResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturns.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ReversePurchaseAwardForReturnsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointState.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByPointStateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ChangePointStateByExternalIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCard.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByRegisteredCardResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmail.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByEmailResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperByIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumber.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetTotalPointsEarnedByLoyaltyCardNumberResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUser.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticateUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntity.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomEntityResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionByPointGroupAndCustomAttributesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPrograms.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperProgramsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtended.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperOffersExtendedResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperPointBalanceByRetailerIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperOfferStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemption.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateRewardRedemptionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AdjustShopperPointsWithExpirationDateCustomAttributesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateShopperPointsBalanceWithCustomAttributesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopper.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.CreateShopperResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.GetShopperRedemptionsByLoyaltyProgramIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.ImportTransactionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.UpdateCustomAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.class.equals(type)){
                
                           return com.hybris.osh.storefront.loyalty.services.client.loyaltyapi.AuthenticationResultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   