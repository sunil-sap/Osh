<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2012 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- Registers sample service. Uses abstractBusinessService as template for getting model and sessionService. -->
	<alias name="process2WarehouseAdapter" alias="process2WarehouseAdapter"/>
	<bean id="process2WarehouseAdapter" class="de.hybris.platform.warehouse.impl.WarehouseMock" scope="tenant">
		<property name="modelService" ref="modelService"/>
		<property name="warehouse2ProcessAdapter" ref="warehouse2ProcessAdapter"/>
	</bean>

	<bean id="warehouse2ProcessAdapter" class="de.hybris.platform.warehouse.impl.DefaultWarehouse2ProcessAdapter" scope="tenant">
		<property name="modelService" ref="modelService"/>
		<property name="statusMap">
			<map key-type="de.hybris.platform.warehouse.WarehouseConsignmentStatus" value-type="com.hybris.osh.enums.WarehouseConsignmentState">
				<entry key="CANCEL" value="CANCEL"/>
				<entry key="COMPLETE" value="COMPLETE"/>
				<entry key="PARTIAL" value="PARTIAL"/>
			</map>
		</property>
	</bean>
	
	<bean id="oshPaymentService" class="com.hybris.osh.payment.services.impl.DefaultOshPaymentService" scope="tenant" >
	<property name="cardPaymentService" ref="cardPaymentService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="modelService" ref="modelService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="transactionCodeGenerator" ref="transactionCodeGenerator" />
		<property name="paymentInfoCreator" ref="paymentInfoCreator" />
		<property name="oshCardPaymentService" ref="oshCardPaymentService"/>
	</bean>
	

	<bean id="placeorderProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processdemo/placeorder.xml"/>
	</bean>
	
	<bean id="consignmentFulfilmentsubprocess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processdemo/consignmentFulfilmentsubprocess.xml"/>
	</bean>
	
	<bean id="consignmentUpdateWithTrackingIdSubprocess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processdemo/consignmentUpdateWithTrackingIdSubprocess.xml"/>
	</bean>
	
	 <bean id="successfulShipmentEmailProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processes/successfulShipmentEmailProcess.xml"/>
	</bean> 
	
	<bean id="returnOrderEmailProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processdemo/returnOrderEmailProcess.xml"/>
	</bean>
	
	<bean id="customerCreditReturnProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/processdemo/customerCreditReturnProcess.xml"/>
	</bean>

	<bean id="checkOrderService" class="com.hybris.osh.impl.DefaultCheckOrderService" scope="tenant"/>

	<bean id="checkOrder" class="com.hybris.osh.actions.CheckOrder" scope="tenant" parent="abstractAction">
		<property name="checkOrderService" ref="checkOrderService"/>
	</bean>

	<bean id="cancelWholeOrderAuthorization" class="com.hybris.osh.actions.CancelWholeOrderAuthorization" scope="tenant"
            parent="abstractAction">
		<property name="paymentService" ref="paymentService"/>
		<property name="oshPaymentService" ref="oshPaymentService"/>
		<property name="userService" ref="userService"/>
		<property name="cancelOrderStrategy" ref="cancelOrderStrategy"/>
    </bean>
    
    <bean id="sendTransactionFailedEmail" class="com.hybris.osh.actions.SendTransactionFailedEmail" scope="tenant" parent="abstractAction">
    	<property name="eventService" ref="eventService"/>
	</bean>
    
    

	<bean id="returnOrderAuthorization" class="com.hybris.osh.actions.ReturnOrderAuthorization" scope="tenant"
            parent="abstractAction">
		<property name="oshPaymentService" ref="oshPaymentService"/>
		<property name="userService" ref="userService"/>
    </bean>
     
    <bean id="customerCreditConfirmation" class="com.hybris.osh.actions.CustomerCreditConfirmation" scope="tenant"
            parent="abstractAction">
        <property name="commonI18NService" ref="commonI18NService"/>
		<property name="oshPaymentService" ref="oshPaymentService"/>
		<property name="userService" ref="userService"/>
		<property name="oshCardPaymentService" ref="oshCardPaymentService"/>
    </bean>
    
	<bean id="sendOrderPlacedNotification" class="com.hybris.osh.actions.SendOrderPlacedNotification" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="sendPaymentFailedNotification" class="com.hybris.osh.actions.SendPaymentFailedNotification" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="fraudCheckOrder" class="com.hybris.osh.actions.FraudCheckOrder" scope="tenant" parent="abstractAction">
		<property name="fraudService" ref="fraudService"/>
		<property name="providerName" value="Mockup_3rdPartyProvider"/>
	</bean>

	<bean id="sendFraudErrorNotification" class="com.hybris.osh.actions.SendFraudErrorNotification" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="checkAuthorizeOrderPayment" class="com.hybris.osh.actions.CheckAuthorizeOrderPayment" scope="tenant" parent="abstractAction"/>
		
    <bean id="updateStockAmount" class="com.hybris.osh.actions.UpdateStockAmount" scope="tenant" parent="abstractAction">
 	   <property name="stockService" ref="stockService"/>
   	   <property name="warehouseService" ref="warehouseService"/>
    </bean>
    

	<bean id="sendAuthorizationFailedNotification" class="com.hybris.osh.actions.SendAuthorizationFailedNotification" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="reserveOrderAmount" class="com.hybris.osh.actions.ReserveOrderAmount" scope="tenant" parent="abstractAction"/>

	<bean id="fraudCheckOrderInternal" class="com.hybris.osh.actions.FraudCheckOrderInternal" scope="tenant" parent="abstractAction">
		<property name="fraudService" ref="fraudService"/>
		<property name="providerName" value="hybris"/>
	</bean>

	<bean id="splitOrder" class="com.hybris.osh.actions.SplitOrder" scope="tenant" parent="abstractAction">
		<property name="orderSplittingService" ref="orderSplittingService"/>
	</bean>

	<bean id="subprocessesCompleted" class="com.hybris.osh.actions.SubprocessesCompleted" scope="tenant" parent="abstractAction"/>

	<bean id="sendOrderCompletedNotification" class="com.hybris.osh.actions.SendOrderCompletedNotification" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<!-- Osh OMS events -->
	
	  <!-- <bean id="successfullShipmentEventListener" class="com.hybris.osh.events.SuccessfullShipmentEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>   -->

	<bean id="generateSuccessfulShipmentEmail" class="com.hybris.osh.actions.csevents.GenerateSuccessfulShipmentEmail" scope="tenant" parent="abstractAction"/>
	

	<!-- consignmentfulfilment process -->
	
	<bean id="calculateOrderStatusService" class="com.hybris.osh.fulfilmentservices.impl.DefaultCalculateOrderStatusService" scope="tenant"/>
  
	
	<bean id="waitBeforeTransmission" class="com.hybris.osh.actions.consignmentfulfilment.WaitBeforeTransmission" scope="tenant" parent="abstractAction"/>

	<bean id="sendConsignmentToWarehouse" class="com.hybris.osh.actions.consignmentfulfilment.SendConsignmentToWarehouse" scope="tenant" parent="abstractAction">
		<property name="process2WarehouseAdapter" ref="process2WarehouseAdapter"/>
	</bean>

	<bean id="receiveConsignmentStatus" class="com.hybris.osh.actions.consignmentfulfilment.ReceiveConsignmentStatus" scope="tenant" parent="abstractAction"/>

	<bean id="calculatePayment" class="com.hybris.osh.actions.consignmentfulfilment.CalculatePayment" scope="tenant" parent="abstractAction"/>

	<bean id="takePayment" class="com.hybris.osh.actions.consignmentfulfilment.TakePayment" scope="tenant" parent="abstractAction">
		<property name="paymentService" ref="paymentService"/>
    </bean>

	<bean id="sendDeliveryMessage" class="com.hybris.osh.actions.consignmentfulfilment.SendDeliveryMessage" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="sendPaymentFailedMessage" class="com.hybris.osh.actions.consignmentfulfilment.SendPaymentFailedMessage" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="cancelConsignment" class="com.hybris.osh.actions.consignmentfulfilment.CancelConsignment" scope="tenant" parent="abstractAction"/>
	
	<bean id="sendCancelMessage" class="com.hybris.osh.actions.consignmentfulfilment.SendCancelMessage" scope="tenant" parent="abstractAction"/>

	<bean id="subprocessEnd" class="com.hybris.osh.actions.consignmentfulfilment.SubprocessEnd" scope="tenant" parent="abstractAction"/>
	
	<bean id="cancelOrderStrategy" class="com.hybris.osh.order.cancel.strategy.impl.DefaultCancelOrderStrategy" scope="tenant"/>	
	
	<bean id="sentFulfilmentEmail" class="com.hybris.osh.actions.consignmentfulfilment.SentFulfilmentEmail" scope="tenant" parent="abstractAction">
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="allowShipment" class="com.hybris.osh.actions.consignmentfulfilment.AllowShipment" scope="tenant" parent="abstractAction">
		<property name="process2WarehouseAdapter" ref="process2WarehouseAdapter"/>
	</bean>
	
	<bean id="enterCancellingStrategy"
		class="com.hybris.osh.ordercancel.impl.orderstatechangingstrategies.OshEnterCancellingStrategy" scope="tenant">
		<property name="modelService" ref="modelService" />
		<property name="eventService" ref="eventService"/>
	</bean>

	<bean id="warehouseProcessingCancelRequestExecutor"
		class="com.hybris.osh.ordercancel.impl.executors.OshWarehouseProcessingCancelRequestExecutor"
		scope="prototype">
		<property name="modelService" ref="modelService" />
		<property name="orderStatusChangeStrategy" ref="enterCancellingStrategy" />
	</bean>
	
	<bean id="defaultConsignmentBasedReturnableCheck"
		class="com.hybris.osh.returns.strategy.impl.DefaultOshConsignmentBasedReturnableCheck"
		parent="abstractBusinessService" scope="tenant">
	</bean>
</beans>
