<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2012 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Spring Integration -->
	<import resource="oshcore-spring-integration.xml"/>
	
	<!-- Spring Dao -->
	<import resource="oshcore-spring-dao.xml"/>
	
	<!-- Spring Services -->
	<import resource="oshcore-spring-services.xml"/>
	
	<!-- SystemSetup for the OshCore -->
	<bean id="acceleratorCoreSystemSetup" class="com.hybris.osh.core.setup.CoreSystemSetup" scope="tenant" parent="abstractCoreSystemSetup"/>

	<!-- Solr field value providers -->

	<bean id="oshCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="oshCategories"/> <!-- 'categories' is the root osh category -->
	</bean>
	
	<bean id="oshBrandCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="brands"/> <!-- 'brands' is the root of the brands hierarchy -->
	</bean>

	<bean id="abstractCategoryCodeValueProvider" abstract="true" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>
	
	<bean id="abstractCategoryNameValueProvider" abstract="true" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="oshCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="oshCategorySource"/>
	</bean>
	
	<bean id="oshBrandCategoryCodeValueProvider" parent="abstractCategoryCodeValueProvider">
		<property name="categorySource" ref="oshBrandCategorySource"/>
	</bean>
	
	<bean id="oshCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="oshCategorySource"/>
	</bean>
	
	<bean id="oshBrandCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="oshBrandCategorySource"/>
	</bean>
	

	<bean id="image515ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="515Wx515H"/>
	</bean>
	<bean id="image300ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="300x300"/>
	</bean>
	<bean id="image96ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="150x150"/>
	</bean>
	<bean id="image65ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="50x50"/>
	</bean>
	<bean id="image30ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="175x175"/>
	</bean>	
	<bean id="image150ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="92x92"/>
	</bean>	

	<bean id="productUrlValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.ProductUrlValueProvider"  parent="abstractPropertyFieldValueProvider">
		<property name="urlResolver" ref="productModelUrlResolver"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>
	
	<!-- OshvalueProviders entry	-->
	<bean id="oshProductFreeShippingValueProvider" class="com.hybris.osh.core.valueproviders.OshProductFreeShippingValueProvider"  parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>		
	</bean>
	
	<bean id="oshProductRecallValueProvider" class="com.hybris.osh.core.valueproviders.OshProductRecallValueProvider"  parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>		
	</bean>
	
	<bean id="oshProductWhiteGloveValueProvider" class="com.hybris.osh.core.valueproviders.OshProductWhiteGloveValueProvider"  parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>		
	</bean>
	
	<alias name="oshSearchResponseFacetsPopulator" alias="commerceSearchResponseFacetsPopulator"/>
	<bean id="oshSearchResponseFacetsPopulator" class="com.hybris.osh.core.search.populators.OshSearchResponseFacetsPopulator" scope="tenant">
	</bean>
	
	<bean id="oshProductNewSKUValueProvider" class="com.hybris.osh.core.valueproviders.OshProductNewSKUValueProvider"  parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>		
	</bean>
	
	<bean id="oshProductPriceValueProvider" class="com.hybris.osh.core.valueproviders.OshProductPriceValueProvider" scope="tenant" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>	
		<property name="oshPriceService" ref="oshPriceService"/>
	</bean>	
	 
	 	
	<bean id="oshSalePriceValueProvider" class="com.hybris.osh.core.valueproviders.OshProductSalePriceValueProvider" scope="tenant" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>	
		<property name="modelService" ref="modelService"/>
	</bean>
	
   <bean id="oshRegularPriceValueProvider" class="com.hybris.osh.core.valueproviders.OshProductRegularPriceValueProvider" scope="tenant" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>	
		<property name="modelService" ref="modelService"/>
	</bean>
	
    <bean id="oshMapPriceValueProvider" class="com.hybris.osh.core.valueproviders.OshProductMapPriceValueProvider" scope="tenant" parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>	
		<property name="modelService" ref="modelService"/>
	</bean>
	
    <bean id="oshProductStockLevelValueProvider" class="com.hybris.osh.core.valueproviders.OshProductStockLevelValueProvider" scope="tenant" parent="productStockLevelStatusValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="stockService" ref="stockService"/>
		<property name="warehouseService" ref="warehouseService"/>
	</bean>
	
	<!-- OshvalueProviders entry ends -->

	
	<alias alias="oshPriceFacade" name="oshPriceFacade"/>
	<bean id="oshPriceFacade"	class="com.hybris.osh.core.price.facade.impl.DefaultOshPriceFacade" scope="tenant">
		<property name="oshPriceService" ref="oshPriceService"/>
	</bean>
			
	<bean id="guestIdGeneratorStrategy" class="com.hybris.osh.core.service.impl.DefaultGuestIdGereratorStrategy" scope="tenant"/>
	
	<bean id="cartRemovalCronjob" class="com.hybris.osh.core.jobs.CartRemovalCronjob" autowire="byName" scope="tenant">
		<property name="cartRemovalService" ref="cartRemovalService"/>
	</bean>
	
	<bean id="checkFeedFileExistancejob" class="com.hybris.osh.core.jobs.CheckFeedFileExistance" autowire="byName" scope="tenant">
	<property name="sftpPriceCheckService" ref="sftpPriceCheckService"/>
	<property name="sftpProductCheckService" ref="sftpProductCheckService"/>
	</bean>
	
	<bean id="cheetahMailDataExportCronjob" class="com.hybris.osh.core.jobs.CheetahMailDataExportCronjob" autowire="byName" scope="tenant">
		<property name="cheetahMailSubscriberService" ref="cheetahMailSubscriberService"/>
	</bean>
	
	<bean id="dropshipPendingCronjob" class="com.hybris.osh.core.jobs.DropshipPendingCronjob" autowire="byName" scope="tenant">
		<property name="dropshipFileCreatorService" ref="dropshipFileCreatorService"/>
	</bean>
	
	<bean id="dropshipConfirmationCronjob" class="com.hybris.osh.core.jobs.DropshipConfirmationCronjob" autowire="byName" scope="tenant">
	<property name="dropshipFileCreatorService" ref="dropshipFileCreatorService"/>	
	</bean>
	
	<bean id="tLogEODFileCreationCronjob" class="com.hybris.osh.core.jobs.TLogEODFileCreationCronjob" autowire="byName" scope="tenant">
	<property name="tLogFileCreatorService" ref="tLogFileCreatorService"/>	
	</bean>
	
	<bean id="tLogHourlyBasedFileCreatorCronjob" class="com.hybris.osh.core.jobs.TLogHourlyBasedFileCreatorCronjob" autowire="byName" scope="tenant">
	<property name="tLogFileCreatorService" ref="tLogFileCreatorService"/>	
	</bean>
	
	<bean id="dropshipFeedProcessingCronjob" class="com.hybris.osh.core.jobs.DropshipFeedProcessingCronjob" autowire="byName" scope="tenant">
	<property name="dropshipProcessingService" ref="dropshipProcessingService"/>	
	</bean>
	
	<bean id="readyToPickupReminderCronJob" class="com.hybris.osh.core.jobs.ReadyToPickupReminderCronJob" autowire="byName" scope="tenant">
		<property name="readyToPickupReminderService" ref="readyToPickupReminderService"/>
	</bean>
	
	<bean id="createMediaCronjob" class="com.hybris.osh.core.jobs.CreateMediaCronjob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	<bean id="imagesImportJob" class="com.hybris.osh.core.jobs.ImagesImportJob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	
	<bean id="checkProductExistanceJob" class="com.hybris.osh.core.jobs.CheckProductExistanceCronjob" autowire="byName" scope="tenant">
 <property name="createMediaImpexService" ref="createMediaImpexService"/>
 </bean>
	
	<bean id="removeOriginalImageJob" class="com.hybris.osh.core.jobs.RemoveOriginalImageCronJob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	<bean id="removeImagesFromSftpCronjob" class="com.hybris.osh.core.jobs.RemoveImagesFromSftpCronjob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	<bean id="removeArchiveFoldersFromSftpCronjob" class="com.hybris.osh.core.jobs.RemoveArchiveFoldersFromSftpCronjob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	<bean id="gzipExtractCronjob" class="com.hybris.osh.core.jobs.GZipExtractCronjob" autowire="byName" scope="tenant">
	<property name="gzipExtractService" ref="gzipExtractService"/>
	</bean>
	
	<bean id="storeInventoryCronjob" class="com.hybris.osh.core.jobs.StoreInventoryCronjob" autowire="byName" scope="tenant">
		<property name="sftpStoreExportService" ref="sftpStoreExportService"/>
	</bean>
	
	<bean id="onlineInventoryCronjob" class="com.hybris.osh.core.jobs.OnlineInventoryCronjob" autowire="byName" scope="tenant">
		<property name="sftpOnlineExportService" ref="sftpOnlineExportService"/>
	</bean>
	
	<bean id="priceFeedProcessingCronjob" class="com.hybris.osh.core.jobs.PriceFeedProcessingCronjob" autowire="byName" scope="tenant">
		<property name="sftpPriceExportService" ref="sftpPriceExportService"/>
	</bean>
	
	<bean id="productFeedProcessingCronjob" class="com.hybris.osh.core.jobs.ProductFeedPrcocessingCronjob" autowire="byName" scope="tenant">
		<property name="sftpProductExportService" ref="sftpProductExportService"/>
	</bean>
	
	<bean id="createProductMediaCronjob" class="com.hybris.osh.core.jobs.CreateProductMediaCronjob" autowire="byName" scope="tenant">
	<property name="createMediaImpexService" ref="createMediaImpexService"/>
	</bean>
	
	<bean id="promotionCodeValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PromotionCodeValueProvider" parent="abstractPropertyFieldValueProvider">
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>
	
	<bean id="promotionImageValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PrimaryPromotionImageValueProvider" parent="abstractPropertyFieldValueProvider">
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>
	
	
	<!-- warehouse mock override -->
	 <bean id="process2WarehouseAdapter" class="com.hybris.osh.warehouse.impl.DefaultOshWarehouseService" scope="tenant">
		<property name="modelService" ref="modelService"/>
		<property name="warehouse2ProcessAdapter" ref="warehouse2ProcessAdapter"/>
	</bean> 
	
	
	<!--
		Event listeners are singletons, therefore the dependency for a bean in tenant-scope
		must be configured with a lookup method.
	-->
	<bean id="customerRegistrationEventListener" class="com.hybris.osh.core.event.RegistrationEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	<bean id="forgottenPasswordEventListener" class="com.hybris.osh.core.event.ForgottenPasswordEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	<bean id="submitOrderEventListener" class="com.hybris.osh.core.event.SubmitOrderEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	<bean id="orderConfirmationEventListener" class="com.hybris.osh.core.event.OrderConfirmationEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="readyForPickUpReminderEventLisner" class="com.hybris.osh.core.event.ReadyForPickUpReminderEventLisner">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="orderCancellationEventListener" class="com.hybris.osh.core.event.OrderCancellationEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
      <bean id="orderChangeStatusEvevntListner" class="com.hybris.osh.core.event.OrderChangeStatusEvevntListner">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="PaymentFailedEventListner" class="com.hybris.osh.core.event.PaymentFailedEventListner">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="PaymentFailedCancelEventListner" class="com.hybris.osh.core.event.PaymentFailedCancelEventListner">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>	
	
	<bean id="returnOrderConfirmationEventListener" class="com.hybris.osh.core.event.ReturnOrderConfirmationEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	
	<bean id="readyToPickupEventListner" class="com.hybris.osh.core.event.ReadyToPickupEventListner">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="RMANumberGeneratedEmailEventListener" class="com.hybris.osh.core.event.RMANumberGeneratedEmailEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	
	<bean id="emailSendToFriendEventListener" class="com.hybris.osh.core.event.EmailSendToFriendEventListener">
		<lookup-method name="getModelServiceViaLookup" bean="modelService"/>
	</bean>
	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/customerRegistrationEmailProcess.xml"/>
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/forgottenPasswordEmailProcess.xml"/>
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/orderConfirmationEmailProcess.xml"/>
	</bean>
	
	<bean id="readyForPickupReminderEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/readyForPickupReminderEmailProcess.xml"/>
	</bean>
	
	<bean id="orderCancellationEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/orderCancellationEmailProcess.xml"/>
	</bean>
        <bean id="orderChangedStatusEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/orderChangedStatusEmailProcess.xml"/>
	</bean>
	<bean id="readyForPickupEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/readyForPickupEmailProcess.xml"/>
	</bean>
	<bean id="RMANumberEmailProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/RMANumberEmailProcess.xml"/>
	</bean>
	
	<bean id="paymentFailedEmailProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/paymentFailedEmailProcess.xml"/>
	</bean>
	<bean id="paymentFailedCancelEmailProcess" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/paymentFailedCancelEmailProcess.xml"/>
	</bean>
	<bean id="SendEmailToFriendProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" scope="tenant">
		<property name="resource" value="classpath:/oshcore/processes/sendEmailToFriendProcess.xml"/>
	</bean>
	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction" scope="tenant" abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="processParameterHelper" ref="processParameterHelper"/>
	</bean>

	<bean id="sendEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction" scope="tenant" parent="abstractAction">
		<property name="emailService" ref="emailService"/>
	</bean>


	<bean id="generateCustomerRegistrationEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<!-- rma: fixed circular reference issue with BTG 4/29/2011 -->
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>

	<bean id="generateForgottenPasswordEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="ForgottenPasswordEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>

	<bean id="generateOrderConfirmationEmail" class="com.hybris.osh.core.process.email.actions.GenerateOrderConfirmationEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="oshCommerceCheckoutService" ref="oshCommerceCheckoutService"/>	
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="generateReadyForPickupReminderEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="ReadyForPickUpReminderEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="generateOrderCancellationEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="OrderCancellationEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
       	<bean id="generateOrderChangeStatusEmail" class="com.hybris.osh.core.process.email.actions.GenerateOrderConfirmationEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="OrderShippedEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="oshCommerceCheckoutService" ref="oshCommerceCheckoutService"/>	
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	<bean id="generateReadyForPickupEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="ReadyForPickUpEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	
	<bean id="generateReturnOrderConfirmationEmail" class="com.hybris.osh.core.process.email.actions.GenerateReturnOrderEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="OrderReturnConfirmationEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="oshCommerceReturnService" ref="oshCommerceReturnService"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="generateRMANumberEmail" class="com.hybris.osh.core.process.email.actions.GenerateReturnOrderEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="RMANumberEmailTemplate"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="oshCommerceReturnService" ref="oshCommerceReturnService"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="generateSendEmailToFriend" class="com.hybris.osh.core.process.email.actions.GenerateEmailForFriendAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="EmailSendToFriendTemplate"/>
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="generatePaymentFailedEmail" class="com.hybris.osh.core.process.email.actions.GeneratePaymentFailedEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="PaymentFailedEmailTemplate"/>
		<property name="tLogFileCreatorService" ref="tLogFileCreatorService"/>	
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
		<bean id="generatePaymentFailedCancelEmail" class="com.hybris.osh.core.process.email.actions.GeneratePaymentFailedEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="frontendTemplateName" value="PaymentFailedCancelEmailTemplate"/>
		<property name="tLogFileCreatorService" ref="tLogFileCreatorService"/>	
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<lookup-method name="getEmailGenerationService" bean="emailGenerationService"/>
	</bean>
	
	<bean id="removeSentEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction" scope="tenant" parent="abstractAction">
		<property name="modelService" ref="modelService"/>
	</bean>

		<bean id="mccSiteUrlHelper" class="com.hybris.osh.core.util.MccSiteUrlHelper">
		<property name="siteBaseUrlResolutionService" ref="siteBaseUrlResolutionService"/>
		<property name="cmsSiteService" ref="cmsSiteService"/>
	</bean>


	<!-- checkout flow configuration -->

	<alias alias="checkoutFlowStrategy" name="uiExperienceCheckoutFlowStrategy"/>
	<bean id="uiExperienceCheckoutFlowStrategy" class="com.hybris.osh.core.checkout.flow.impl.UiExperienceCheckoutFlowStrategy" scope="tenant">
		<!-- This strategy looks up a strategy based on the current UI experience level -->
		<property name="uiExperienceService" ref="uiExperienceService"/>

		<property name="experienceMappings">
			<map>
				<entry key="MOBILE" value-ref="multiStepCheckoutFlowStrategy"/>
			</map>
		</property>

		<!-- Default to site specific checkout -->
		<property name="defaultStrategy" ref="siteCheckoutFlowStrategy"/>
	</bean>

	<bean id="siteCheckoutFlowStrategy" class="com.hybris.osh.core.checkout.flow.impl.SiteCheckoutFlowStrategy" scope="tenant" >
		<!-- This strategy looks up a strategy based on the current site UID -->
		<property name="cmsSiteService" ref="cmsSiteService"/>
		<property name="siteMappings">
			<map>
				<entry key="electronics" value-ref="newCustomerCheckoutFlowStrategy"/>
				<entry key="apparel-de" value-ref="multiStepCheckoutFlowStrategy"/>
				<entry key="apparel-uk" value-ref="singleStepCheckoutFlowStrategy"/>
			</map>
		</property>
		<!-- Default to SINGLE step checkout -->
		<property name="defaultStrategy" ref="singleStepCheckoutFlowStrategy"/>
	</bean>

	<bean id="newCustomerCheckoutFlowStrategy" class="com.hybris.osh.core.checkout.flow.impl.NewCustomerCheckoutFlowStrategy" scope="tenant">
		<!-- This strategy works out if the user has created any data -->
		<property name="userService" ref="userService"/>
		<property name="customerAccountService" ref="customerAccountService"/>
		<property name="defaultStrategy" ref="singleStepCheckoutFlowStrategy" />
		<property name="newCustomerStrategy" ref="multiStepCheckoutFlowStrategy"/>
	</bean>

	<bean id="singleStepCheckoutFlowStrategy" class="com.hybris.osh.core.checkout.flow.impl.FixedCheckoutFlowStrategy">
		<property name="checkoutFlow" value="SINGLE" />
	</bean>

	<bean id="multiStepCheckoutFlowStrategy" class="com.hybris.osh.core.checkout.flow.impl.FixedCheckoutFlowStrategy">
		<property name="checkoutFlow" value="MULTISTEP" />
	</bean>
	
	
	<!-- <alias alias="commerceCheckoutService" name="defaultOshCommerceCheckoutService"/>
	<bean id="defaultOshCommerceCheckoutService" class="com.hybris.osh.core.service.impl.DefaultOshCommerceCheckoutService" scope="tenant" parent="defaultCommerceCheckoutService"/>
 -->
	<!--Checkout PCI Strategies -->
	<alias alias="checkoutPciStrategy" name="configuredCheckoutPciStrategy"/>
	<bean id="configuredCheckoutPciStrategy" class="com.hybris.osh.core.checkout.pci.impl.ConfiguredCheckoutPciStrategy" scope="tenant">
		<!-- This strategy looks in the session to see if HOP is the chosen option.  HOP is only valid if configured in the application properties file. Defaults to wsCheckoutPciStrategy. -->
		<property name="siteConfigService" ref="siteConfigService"/>

		<!-- Default to the wsCheckoutPciStrategy -->
		<property name="defaultCheckoutPciStrategy" ref="wsCheckoutPciStrategy" />
	</bean>
		
	<bean id="wsCheckoutPciStrategy" class="com.hybris.osh.core.checkout.pci.impl.FixedCheckoutPciStrategy">
		<!-- Use the Payment extension web services to create credit card details -->
		<property name="subscriptionPciOption" value="DEFAULT" />
	</bean>
	<bean id="hopCheckoutPciStrategy" class="com.hybris.osh.core.checkout.pci.impl.FixedCheckoutPciStrategy">
		<!-- Use the Hosted Order Payment to create credit card details -->
		<property name="subscriptionPciOption" value="HOP" />
	</bean>
	
	
	<bean id="loyaltyOrderDataExportJobPerformable" class="com.hybris.osh.core.jobs.LoyaltyOrderDataExportJobPerformable" parent="abstractJobPerformable" scope="tenant">
    	<property name="oshFlexiSearchUtil" ref="oshFlexiSearchUtil"/>
    	<property name="loyaltyOrderExportPopulator" ref="loyaltyOrderExportPopulator"/>
    </bean>
    
    <bean id="loyaltyOrderExportPopulator" class="com.hybris.osh.core.populators.loyalty.LoyaltyOrderExportPopulator">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>
	
    <bean id="oshFlexiSearchUtil" class="com.hybris.osh.core.flexisearch.OshFlexiSearchUtil">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>
	<bean id="calculateFinalShippingAmount" class="com.hybris.osh.core.shipping.CalculateFinalShippingAmount" scope="tenant"/>
	
	<bean id="oshShippingInterceptor" class="com.hybris.osh.core.shipping.interceptor.OshShippingInterceptor"
      autowire="byName"/>
    <bean id="OshShippingInterceptorMapping" 
      class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
    <property name="interceptor" ref="oshShippingInterceptor"/>
    <property name="typeCode" value="OSHShipping"/>
	</bean>
	
	<bean id="imageOrderPrepareInterceptor" class="com.hybris.osh.core.interceptor.imageorder.ImageOrderPrepareInterceptor"
      autowire="byName"/>
    <bean id="imageOrderPrepareInterceptorMapping" 
      class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
    <property name="interceptor" ref="imageOrderPrepareInterceptor"/>
    <property name="typeCode" value="Product"/>
	</bean>
	
	<bean id="orderThresholdSymptom"
		class="com.hybris.osh.core.fraud.symptom.impl.OshOrderThresholdSymptom"
		scope="tenant">
		<property name="symptomName" value="Price threshold" />
		<property name="increment" value="50" />
		<property name="thresholdLimit" value="10000" />
		<property name="thresholdDelta" value="100" />
	</bean>
	
	
	
	<bean id="oshStoreNameDao" class="com.hybris.osh.core.storename.dao.impl.DefaultOshStoreNameDao" scope="tenant">
	<property name="flexibleSearchService" ref="flexibleSearchService"></property>
	</bean>
	
	<bean id="contactUsEmailService" class="com.hybris.osh.core.service.impl.DefaultContactUsEmailService" scope="tenant">
	 <property name="oshStoreNameDao" ref="oshStoreNameDao"></property>
	</bean>
	
	<alias name="defaultMediaConversionJobDao" alias="mediaConversionJobDao"/>
    <bean id="defaultMediaConversionJobDao" 
        class="com.hybris.osh.core.dao.impl.OshMediaConversionJobDao" 
        scope="tenant">
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>
    
  <bean id="oshSaleProductValueProvider" class="com.hybris.osh.core.valueproviders.OshSaleProductValueProvider" scope="tenant" parent="abstractPropertyFieldValueProvider">
  	<property name="fieldNameProvider" ref="solrFieldNameProvider"/> 
  	<property name="modelService" ref="modelService"/>
  </bean>

<alias alias="geoServiceWrapper" name="mygMapsGeoServiceWrapper" />
	<bean id="mygMapsGeoServiceWrapper"	class="com.hybris.osh.core.storelocator.googlemaps.MyGoogleMapsServiceWrapper"
		scope="tenant" />	
 	
</beans>
